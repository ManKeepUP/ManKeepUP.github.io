<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ManKeepUP</title>
  
  <subtitle>Man Always Keep Up!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mankeepup.github.io/"/>
  <updated>2020-02-18T10:38:50.367Z</updated>
  <id>https://mankeepup.github.io/</id>
  
  <author>
    <name>ManKeepUP</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JDBC基础</title>
    <link href="https://mankeepup.github.io/2020/02/14/Computer%20Language/Java/JDBC%E5%9F%BA%E7%A1%80/"/>
    <id>https://mankeepup.github.io/2020/02/14/Computer%20Language/Java/JDBC%E5%9F%BA%E7%A1%80/</id>
    <published>2020-02-13T16:00:00.000Z</published>
    <updated>2020-02-18T10:38:50.367Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>从这里开始了解JDBC…</p></blockquote><a id="more"></a><div class="note primary">            <p>笔记的相关内容来自于B站的<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2NTkyNjM4NjAvP3NwbV9pZF9mcm9tPTMzMy43ODguYl82MzZmNmQ2ZDY1NmU3NC4zNA==" title="https://www.bilibili.com/video/av59263860/?spm_id_from=333.788.b_636f6d6d656e74.34">JDBC教程<i class="fa fa-external-link"></i></span></p>          </div><h1 id="1-JDBC是什么？"><a href="#1-JDBC是什么？" class="headerlink" title="1. JDBC是什么？"></a>1. JDBC是什么？</h1><p>&emsp;&emsp;JDBC全称Java DataBase Connectivity(即Java语言连接数据库)。JDBC的本质是SUN公司制定的一套接口(interface)，JDBC属于<mark>java.sql.*;</mark>这个软件包下还有很多其他接口。每一个接口都有<mark>调用者和实现者</mark>。面向接口调用，面向接口写实现类，这些都属于面向接口编程。<br><div class="note info">            <p>为什么要面向接口编程？</p>          </div></p><blockquote><p><strong>解耦合</strong>：降低程序的耦合度，提高程序的扩展力；</p></blockquote><div class="note info">            <p>多态机制</p>          </div>  <p>&emsp;&emsp;多态机制就是非常典型的面向抽象编程，举例如下，其中Animal是抽象类，而Dog和Cat是具体的对象，由Animal这个抽象的父类可以衍生出各种不同形态的子类(对象)，于是，“多态”的概念可以窥见一斑；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//建议：  </span></span><br><span class="line"> Animal a = <span class="keyword">new</span> Cat();  </span><br><span class="line"> Animal d = <span class="keyword">new</span> Dog();</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">feed</span><span class="params">(Animal a)</span><span class="comment">//(面向父类型编程)  </span></span></span><br><span class="line"><span class="function">     </span></span><br><span class="line"><span class="function"><span class="comment">//不建议：  </span></span></span><br><span class="line"><span class="function"> Dog d </span>= <span class="keyword">new</span> Dog();  </span><br><span class="line"> Cat t = <span class="keyword">new</span> Cat();</span><br></pre></td></tr></table></figure><div class="note info">            <p>为什么SUN公司要指定一套JDBC接口？</p>          </div><p>&emsp;&emsp;因为每一个数据库的底层实现原理都不同，如Orcal,MySQL,MS Sqlsever等数据库都有自己的实现原理，我们可以通过接口调用任何一个数据库，而不用关心接口底下的实现方式。因此，SUN公司定义好这样一个连接数据的接口后，大大减小了程序员的工作量。</p><h1 id="2-模拟JDBC本质"><a href="#2-模拟JDBC本质" class="headerlink" title="2. 模拟JDBC本质"></a>2. 模拟JDBC本质</h1><p>&emsp;&emsp;下面来模拟一下JDBC的本质，下面是一张描绘JDBC接口与它的实现者，调用者之间关系的图片:<img src="http://m.qpic.cn/psc?/V12EJyj53W0gCd/lpoTnOcKgshCRzVbSpUVWSiiJvxqm9kxubDGKe4cz5v.xYV*l5HU5oFmwy6zWLR*seL33VClngKsqUygDIiG825HNsJpdTwmZ8.uWyntiHg!/b&amp;bo=.wUIAwAAAAADB9c!&amp;rf=viewer_4" alt="Fig.JDBC"><br>&emsp;&emsp;模拟的过程如下：SUN公司定义了一个<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvSmF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/Java">JDBC<i class="fa fa-external-link"></i></span>的接口,于是各大数据库厂家纷纷开始对这个接口进行实现(<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvTXlTUUwuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/MySQL.java">MySQL<i class="fa fa-external-link"></i></span>,<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvT3JhY2xlLmphdmE=" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/Oracle.java">Oracle<i class="fa fa-external-link"></i></span>,<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvU3Fsc2VydmVyLmphdmE=" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/Sqlserver.java">Sqlserver<i class="fa fa-external-link"></i></span>)，因此，不同的数据库底层的实现原理不尽相同。作为<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvSmF2YVByb2dyYW1tZXIuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/JavaProgrammer.java">Java程序员<i class="fa fa-external-link"></i></span>来说，却不需要关心这些实现细节，只需要调用数据库厂家已经实现好的接口即可，这大大缩短了开发周期。</p><blockquote><p>代码的进一步优化是利用反射机制创建对象，通过<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvamRiYy5wcm9wZXJ0aWVz" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/jdbc.properties">配置文件<i class="fa fa-external-link"></i></span>来实现对不同种类的数据库调用，而Java代码不用再作任何修改。</p></blockquote><h1 id="3-开发前的准备"><a href="#3-开发前的准备" class="headerlink" title="3. 开发前的准备"></a>3. 开发前的准备</h1><p>&emsp;&emsp;JDBC开发前的准备工作：需要先从官网上下载对应的jar包，然后将其配置到环境变量classpath当中。classpath是环境变量，若没有可以新建一个，具体方式如下：<br><div class="note warning">            <p>请注意路径前面的.;不能漏，.表示是当前路径</p>          </div><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classpath=.;D:\Java\JDBC\resources\mysql-connector-java-5.1.48\mysql-connector-java-5.1.48-bin.jar</span><br></pre></td></tr></table></figure></p><blockquote><p>以上关于JDBC的配置是针对于文本编辑器的方式开发，使用IDEA工具的时候，不需要配置以上的环境变量，IDEA有自己的配置方式。</p></blockquote><h1 id="4-JDBC编程六步"><a href="#4-JDBC编程六步" class="headerlink" title="4. JDBC编程六步"></a>4. JDBC编程六步</h1><h2 id="4-1-编程六步详情"><a href="#4-1-编程六步详情" class="headerlink" title="4.1 编程六步详情"></a>4.1 编程六步详情</h2><ul><li>第一步：注册驱动（作用：告诉Java程序，即将要连接的是哪个品牌的数据库）</li><li>第二步：获取连接（作用：表示JVM的进程和数据库进程之间的通道打开了，这属于进程之间的通信，是重量级的，使用完之后一定要关闭通道）</li><li>第三步：获取数据库操作对象（作用：专门执行sql语句的对象）</li><li>第四步：执行SQL语句（作用：DQL,DML…）</li><li>第五步：处理查询结果集（作用：只有当第四步执行的是select语句时，才有这一步处理查询结果集）</li><li>第六步：释放资源（作用：使用完资源之后一定要关闭资源，java和数据库数据进程间的通信，开启之后一定要关闭）</li><li></li></ul><h2 id="4-2-JDBC编程实例"><a href="#4-2-JDBC编程实例" class="headerlink" title="4.2 JDBC编程实例"></a>4.2 JDBC编程实例</h2><h3 id="4-2-1-六步规范代码"><a href="#4-2-1-六步规范代码" class="headerlink" title="4.2.1 六步规范代码"></a>4.2.1 六步规范代码</h3><p>&emsp;&emsp;下面是一段实例代码，展示了上述六个步骤的代码实现过程，点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDEuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest01.java">JDBCTest01.java<i class="fa fa-external-link"></i></span>去看看吧~</p><h3 id="4-2-2-实现delete-update"><a href="#4-2-2-实现delete-update" class="headerlink" title="4.2.2 实现delete,update"></a>4.2.2 实现delete,update</h3><p>&emsp;&emsp;下面是实现删除(delete)和更新(update)数据库的代码，点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDIuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest02.java">JDBCTest02.java<i class="fa fa-external-link"></i></span>查看~</p><h3 id="4-2-3-注册驱动优化"><a href="#4-2-3-注册驱动优化" class="headerlink" title="4.2.3 注册驱动优化"></a>4.2.3 注册驱动优化</h3><p>&emsp;&emsp;我们对JDBC六步中的“注册驱动”这一步进行优化，优化后的代码是一种更为常用的写法，点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDMuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest03.java">JDBCTest03<i class="fa fa-external-link"></i></span>查看~</p><h3 id="4-2-4-将数据库信息写到配置文件"><a href="#4-2-4-将数据库信息写到配置文件" class="headerlink" title="4.2.4 将数据库信息写到配置文件"></a>4.2.4 将数据库信息写到配置文件</h3><p>&emsp;&emsp;将数据库信息写到配置文件中，能够优化我们的项目代码，点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDQuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest04.java">JDBCTest04<i class="fa fa-external-link"></i></span>可查看~</p><h3 id="4-2-5-处理查询结果集"><a href="#4-2-5-处理查询结果集" class="headerlink" title="4.2.5 处理查询结果集"></a>4.2.5 处理查询结果集</h3><p>&emsp;&emsp;当使用select语句时，我们要用查询结果集中的get方法来获取数据中的内容，用rs.next()方法来移动光标，见下图：<img src="http://m.qpic.cn/psc?/V12EJyj53W0gCd/lpoTnOcKgshCRzVbSpUVWYBaXKrJ5rgrkzw49OWXj.Kz52tgDTHBQ6iAbd0gvBcLpGoVoEU.kuCHWUlKPGiwExyrrMP7sQw4IanEWQjk4WU!/b&amp;bo=.wUIAwAAAAADB9c!&amp;rf=viewer_4" alt="Fig.遍历结果集">点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDUuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest05.java">JDBCTest05<i class="fa fa-external-link"></i></span>查看本实例的代码吧~</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;从这里开始了解JDBC…&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Java&#39;s Everything" scheme="https://ManKeepUP.github.io/categories/Java-s-Everything/"/>
    
    
      <category term="JDBC" scheme="https://ManKeepUP.github.io/tags/JDBC/"/>
    
  </entry>
  
  <entry>
    <title>Java环境</title>
    <link href="https://mankeepup.github.io/2020/02/14/Computer%20Language/Java/Java%E7%8E%AF%E5%A2%83/"/>
    <id>https://mankeepup.github.io/2020/02/14/Computer%20Language/Java/Java%E7%8E%AF%E5%A2%83/</id>
    <published>2020-02-13T16:00:00.000Z</published>
    <updated>2020-02-15T08:59:55.903Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Java开发环境的搭建过程…</p></blockquote><a id="more"></a><p>&emsp;&emsp;从上一次用Java开发2048游戏到现在已经过去了将近3年多的时间，这期间几乎很少有再接触过Java任何相关的知识，今天，重新拾起它，仍然是一件振奋人心的事情。</p><h1 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h1><h2 id="JDK下载"><a href="#JDK下载" class="headerlink" title="JDK下载"></a>JDK下载</h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Java开发环境的搭建过程…&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Java&#39;s Everything" scheme="https://ManKeepUP.github.io/categories/Java-s-Everything/"/>
    
    
      <category term="Java环境搭建" scheme="https://ManKeepUP.github.io/tags/Java%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>2月13日-作业</title>
    <link href="https://mankeepup.github.io/2020/02/13/Rainman-Homework/%E9%9B%A8%E4%BA%BA-%E4%BD%9C%E4%B8%9A/"/>
    <id>https://mankeepup.github.io/2020/02/13/Rainman-Homework/%E9%9B%A8%E4%BA%BA-%E4%BD%9C%E4%B8%9A/</id>
    <published>2020-02-13T12:32:00.000Z</published>
    <updated>2020-02-15T08:59:55.898Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="作业" scheme="https://ManKeepUP.github.io/categories/%E4%BD%9C%E4%B8%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>2月13日-日报</title>
    <link href="https://mankeepup.github.io/2020/02/13/Rainman-Daily-Report/%E9%9B%A8%E4%BA%BA-%E6%97%A5%E6%8A%A5/"/>
    <id>https://mankeepup.github.io/2020/02/13/Rainman-Daily-Report/%E9%9B%A8%E4%BA%BA-%E6%97%A5%E6%8A%A5/</id>
    <published>2020-02-13T12:30:00.000Z</published>
    <updated>2020-02-15T08:59:55.886Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="日报" scheme="https://ManKeepUP.github.io/categories/%E6%97%A5%E6%8A%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>ManKeepUP-BLOG始末</title>
    <link href="https://mankeepup.github.io/2020/02/09/ManKeepUP-BLOG%E5%A7%8B%E6%9C%AB/"/>
    <id>https://mankeepup.github.io/2020/02/09/ManKeepUP-BLOG%E5%A7%8B%E6%9C%AB/</id>
    <published>2020-02-09T09:40:59.000Z</published>
    <updated>2020-02-17T04:00:28.905Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>关于博客的一切…</p></blockquote><a id="more"></a><h1 id="来了老弟"><a href="#来了老弟" class="headerlink" title="来了老弟"></a>来了老弟</h1><p>&emsp;&emsp;出于不满足，我一直在思考如何让自己的博客像浏览过的一些优秀“博客”站一样,温暖丰富，充实强大，重要的是能够进行高度定制化，将博客打造成自己的互联网“小窝”。(For Example:<span class="exturl" data-url="aHR0cHM6Ly9iZXN0enVvLmNuLw==" title="https://bestzuo.cn/">Sanarous<i class="fa fa-external-link"></i></span>)偶然中的必然，当下我正处于“无脑大学生”的状态，看到了hexo,hugo等一些部署静态网站的工具，但我几乎没有区分这些工具之间不同，选择hexo是因为自己使用过github，而它是用github pages来做的，所以相对熟悉一些，而选择NexT主题是因为学的那个教程里用的这个，而我当时试了另外一个主题好像没有成功，就这样，hexo+NexT的个人定制化博客的路程开始了！(AoLiGei~)  </p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RyZXcyMzMvaGV4by1nZW5lcmF0b3ItcmFuZG9t" title="https://github.com/Drew233/hexo-generator-random">https://github.com/Drew233/hexo-generator-random<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;关于博客的一切…&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="Blog" scheme="https://ManKeepUP.github.io/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Markdown用法</title>
    <link href="https://mankeepup.github.io/2020/02/08/Markdown%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <id>https://mankeepup.github.io/2020/02/08/Markdown%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</id>
    <published>2020-02-08T04:26:50.000Z</published>
    <updated>2020-02-18T03:01:08.204Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>从这里快速入手Markdown…</p></blockquote><a id="more"></a><div class="note primary">            <p>欢迎阅读！Markdown同Next主题一样——强大高效，简单干净。本文将梳理Markdown中常见的语法，让你迅速用Markdown进行创作。Let’s Go!</p>          </div><h1 id="Markdown使用手册"><a href="#Markdown使用手册" class="headerlink" title="Markdown使用手册"></a>Markdown使用手册</h1><h2 id="Markdown样式"><a href="#Markdown样式" class="headerlink" title="Markdown样式"></a>Markdown样式</h2><h2 id="代码块设置"><a href="#代码块设置" class="headerlink" title="代码块设置"></a>代码块设置</h2><p>&emsp;&emsp;想在文件中嵌入代码，只需要用三个‘`’符号(位于tab键上方)一上一下将代码包含在内，你可以在‘```’符号后再做进一步的设置，如language,url,title等等。   </p><h2 id="图"><a href="#图" class="headerlink" title="图"></a>图</h2><h3 id="用Mermaid画图"><a href="#用Mermaid画图" class="headerlink" title="用Mermaid画图"></a>用Mermaid画图</h3><p>&emsp;&emsp;NexT允许用户通过代码来绘制多种图形(如甘特图、流图、类图、顺序图等)，在NexT主题中集成了Mermaid插件，使用它时需要我们在_config.yml文件设置为true。如果是刚开始接触，我们可以在github的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lcm1haWQtanMvbWVybWFpZA==" title="https://github.com/mermaid-js/mermaid">mermaid<i class="fa fa-external-link"></i></span>仓库上在线画图，学习它的用法。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Mermaid tag</span></span><br><span class="line">mermaid:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Available themes: default | dark | forest | neutral</span></span><br><span class="line">  theme: default</span><br></pre></td></tr></table></figure></p><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>&emsp;&emsp;如果想要插入一张图片，那么可以这么做：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果是网上的图片</span></span><br><span class="line">![你给图片取的名字](图片地址链接)</span><br></pre></td></tr></table></figure></p><ul><li>列表1</li><li>列表2<br>a 子列表<br>b 子列表  </li><li>列表3</li></ul><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmFpZHUuY29t" title="https://www.baidu.com">百度一下<i class="fa fa-external-link"></i></span><br><em>字体变斜</em><br><strong>字体变粗</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt; 标题 &lt;&#x2F;title&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;body&gt;&lt;&#x2F;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>引用</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;从这里快速入手Markdown…&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Markdown" scheme="https://ManKeepUP.github.io/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="https://ManKeepUP.github.io/tags/Markdown/"/>
    
  </entry>
  
</feed>
