<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Daily Write（反序列化漏洞）</title>
    <url>/2020/05/06/%E6%97%A5%E5%BF%97/%E6%97%A5%E5%BF%9720200506/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="2cd37f78d552f91fcf360f0f0438f61667cb5c0b24b4fc5b1dfeb084461d334a"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>日志集</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Daily Write（Burpsuite 1.7启动）</title>
    <url>/2020/05/06/%E6%97%A5%E5%BF%97/%E6%97%A5%E5%BF%9720200505/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="79061e679f968a65ece062ed510d1791a73f20c3cbca5e4f5fc19a29d788dfa6"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>日志集</category>
      </categories>
      <tags>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Web安全深度剖析</title>
    <url>/2020/05/03/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/web%E5%AE%89%E5%85%A8%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/</url>
    <content><![CDATA[<p>读书笔记之《Web安全深度剖析》<br><a id="more"></a></p>
<h1 id="Web安全简介"><a href="#Web安全简介" class="headerlink" title="Web安全简介"></a>Web安全简介</h1><h2 id="服务器是如何被入侵的？"><a href="#服务器是如何被入侵的？" class="headerlink" title="服务器是如何被入侵的？"></a>服务器是如何被入侵的？</h2><blockquote>
<p>攻击者渗透计算机的必要条件：  </p>
</blockquote>
<pre><code>攻击者的计算机能够与服务器通信（端口） 
</code></pre><h2 id="如何更好地学习安全？"><a href="#如何更好地学习安全？" class="headerlink" title="如何更好地学习安全？"></a>如何更好地学习安全？</h2><blockquote>
<p>编程语言  </p>
</blockquote>
<ul>
<li>C/C++:永不衰败  </li>
<li>Java:跨平台  </li>
<li>C#:.NET Framework框架支持  </li>
<li>Python:脚本语言，无需编译  </li>
<li>HTML:前端语言，渗透测试必会</li>
<li>JS:帮助理解渗透</li>
<li>数据库：掌握一门SQL是必需的  </li>
</ul>
<h1 id="深入HTTP请求流程"><a href="#深入HTTP请求流程" class="headerlink" title="深入HTTP请求流程"></a>深入HTTP请求流程</h1><h2 id="HTTP协议解析"><a href="#HTTP协议解析" class="headerlink" title="HTTP协议解析"></a>HTTP协议解析</h2><p>超文本传输协议，允许将HTML文档从Web服务器传送到Web浏览器</p>
<h3 id="发起HTTP请求"><a href="#发起HTTP请求" class="headerlink" title="发起HTTP请求"></a>发起HTTP请求</h3><blockquote>
<p>URL标准格式</p>
</blockquote>
<pre><code>协议://服务器IP[:端口]/路径/[?查询]
eg:http://www.xxx.com/post/httpxieyi.html
</code></pre><blockquote>
<p>HTTP工具  </p>
</blockquote>
<ul>
<li>浏览器</li>
<li>curl(Client URL)  </li>
</ul>
<blockquote>
<p>curl工具学习链接   </p>
</blockquote>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9jYXRvbm1hdC5uZXQvY29va2Jvb2tzL2N1cmw=" title="https://catonmat.net/cookbooks/curl">curl cookbook<i class="fa fa-external-link"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTEvMDkvY3VybC5odG1s" title="http://www.ruanyifeng.com/blog/2011/09/curl.html">curl网站开发指南<i class="fa fa-external-link"></i></span><h3 id="HTTP协议详解"><a href="#HTTP协议详解" class="headerlink" title="HTTP协议详解"></a>HTTP协议详解</h3></li>
</ul>
<blockquote>
<p>HTTP协议的无状态</p>
</blockquote>
<pre><code>Web浏览器和Web服务器之间不需要建立持久的连接，即客户端向服务器发出请求，服务器返回响应，连接就被关闭了。
</code></pre><p><strong>1.HTTP请求与响应</strong><br>（1）HTTP请求  </p>
<ul>
<li>请求行  </li>
<li>请求头</li>
<li>请求正文  </li>
</ul>
<p>（2）HTTP响应  </p>
<ul>
<li>响应行  </li>
<li>响应头</li>
<li>响应正文</li>
</ul>
<p><strong>2.HTTP请求方法</strong></p>
<ul>
<li>GET：获取请求页面的指定信息</li>
<li>POST：与GET类似，但有请求内容，安全性更高</li>
<li>HEAD：用于测试超文本链接的有效性</li>
<li>PUT：请求服务器将请求实体存储在请求资源下，请求资源存在时，用此资源更新；请求资源不存在时，创建此资源。</li>
<li>DELETE：请求服务器删除指定的资源</li>
<li>TRACE：回显服务器收到的请求信息，用于测试或诊断</li>
<li>CONNECT：动态切换到隧道的代理</li>
<li>OPTIONS：请求获得资源在通信过程中可以使用的上述功能选项。<br><mark>由于PUT和DELETE属于危险方法，通常情况下服务器会关闭它们</mark><br>【注】：<span class="exturl" data-url="aHR0cDp3d3cudzMub3JnL1Byb3RvY29scy9yZmMyNjE2L3JmYzI2MTYtc2VjOS5odG1s" title="http:www.w3.org/Protocols/rfc2616/rfc2616-sec9.html">HTTP/1.1标准方法详情<i class="fa fa-external-link"></i></span></li>
</ul>
<p><strong>3.HTTP状态码</strong><br>状态码由三位数字组成，第一位数字定义了响应的类别。 </p>
<ul>
<li>1：信息提示，请求已被成功接收  </li>
<li>2：成功  </li>
<li>3：重定向  </li>
<li>4：客户端错误状态码</li>
<li>5：服务器内部错误</li>
</ul>
<p><strong>4.HTTP消息</strong><br>（1）请求头：客户端向服务器传递请求时的附加信息及客户端自身信息</p>
<ul>
<li>Host</li>
<li>User-Agent</li>
<li>Refere</li>
<li>Cookie</li>
<li>Range</li>
<li>x-forward-for</li>
<li>Accept</li>
<li>Accept-Charset  </li>
</ul>
<p>（2）响应头：服务器根据请求向客户端发送的HTTP头</p>
<ul>
<li>Server</li>
<li>Set-Cookie</li>
<li>Last-Modified</li>
<li>Location</li>
<li>Refresh</li>
</ul>
<p>（3）普通头<br>（4）实体头</p>
<ul>
<li>Content-Type</li>
<li>Content-Encoding</li>
<li>Content-Length</li>
<li>Content-Modified</li>
<li><p>Last-Modified</p>
<h3 id="模拟HTTP请求"><a href="#模拟HTTP请求" class="headerlink" title="模拟HTTP请求"></a>模拟HTTP请求</h3></li>
<li><p>开启Windows中的Telnet Client程序</p>
</li>
<li>打开cmd，输入Telnet www.baidu.com 80 </li>
<li>回车</li>
<li>Ctrl+]</li>
<li>回车</li>
<li>输入 GET/index.html HTTP/1.1和Host:www.baidu.com(输入间隔要短，快速完成该步，避免连接失败)</li>
<li>回车</li>
<li>回车</li>
<li>服务器返回数据<h3 id="HTTP协议和HTTPS协议的区别"><a href="#HTTP协议和HTTPS协议的区别" class="headerlink" title="HTTP协议和HTTPS协议的区别"></a>HTTP协议和HTTPS协议的区别</h3></li>
</ul>
<table>
<tr>
    <th>HTTP</th>
    <th>HTTPS</th>
</tr>
<tr>
    <td>
        明文传输<br>  
        80端口<br>  
        不需要申请证书<br>  
        无状态<br>  
    </td>
    <td>
        SSL加密<br>  
        443端口<br>  
        需要申请CA证书<br>  
        可进行加密传输、身份认证<br>  
    </td>
</tr>
</table> 

<h2 id="截取HTTP请求"><a href="#截取HTTP请求" class="headerlink" title="截取HTTP请求"></a>截取HTTP请求</h2><p>【注】：  </p>
<pre><code>前端验证是为了防止用户输入错误，服务器端验证是为了防止恶意攻击。
</code></pre><p>1.常用的截取工具  </p>
<ul>
<li>Burpsuite</li>
<li>Fidder</li>
<li>WinSock Expert</li>
</ul>
<p>2.常用的抓包工具</p>
<ul>
<li>WireShark</li>
<li>MiniSinffer</li>
<li>Iptool</li>
<li>Sniffer</li>
</ul>
<h2 id="HTTP应用：黑帽SEO之搜索引擎劫持"><a href="#HTTP应用：黑帽SEO之搜索引擎劫持" class="headerlink" title="HTTP应用：黑帽SEO之搜索引擎劫持"></a>HTTP应用：黑帽SEO之搜索引擎劫持</h2><p>SEO(Search Engine Optimization)，搜索引擎流量劫持一般步骤：</p>
<ul>
<li>建立劫持搜索引擎库</li>
<li>获取HTTP Refere头</li>
<li>遍历搜索引擎库，并与Refere的内容相比，若两者内容相同或存在相同的关键字，页面将发生跳转</li>
</ul>
<h1 id="信息探测"><a href="#信息探测" class="headerlink" title="信息探测"></a>信息探测</h1><h2 id="Google-Hacking"><a href="#Google-Hacking" class="headerlink" title="Google Hacking"></a>Google Hacking</h2><table>
<tr>
    <th>关键字</th>
    <th>说明</th>
</tr>
<tr>
    <td>site</td>
    <td>指定域名</td>
</tr>
<tr>
    <td>index</td>
    <td>正文中存在关键字的网页</td>
</tr>
<tr>
    <td>intitle</td>
    <td>标题中存在关键字的网页</td>
</tr>
<tr>
    <td>info</td>
    <td>一些基本信息</td>
</tr>
<tr>
    <td>inurl</td>
    <td>URL存在关键字的网页</td>
</tr><tr>
    <td>filetype</td>
    <td>搜索指定文件类型</td>
</tr>
</table> 

<h2 id="Nmap初体验"><a href="#Nmap初体验" class="headerlink" title="Nmap初体验"></a>Nmap初体验</h2><p><span class="exturl" data-url="aHR0cDovL3d3dy5ubWFwLmNvbQ==" title="http://www.nmap.com">Nmap<i class="fa fa-external-link"></i></span>是网络管理必用的软件之一<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%8AWeb%E5%AE%89%E5%85%A8%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90%E3%80%8B/nmap%E5%B8%B8%E7%94%A8%E6%89%AB%E6%8F%8F%E5%8F%82%E6%95%B0%E5%8F%8A%E8%AF%B4%E6%98%8E.png" alt="nmap常用扫描参数及说明"><br>【注】：学习Nmap最重要的是<mark>掌握常用参数的含义</mark></p>
<h3 id="Nmap常用的脚本引擎"><a href="#Nmap常用的脚本引擎" class="headerlink" title="Nmap常用的脚本引擎"></a>Nmap常用的脚本引擎</h3><ul>
<li>http-enum.nse</li>
<li>sql-injection.nse</li>
</ul>
<p>【注】：<span class="exturl" data-url="aHR0cDovL25tYXAub3JnL2Jvb2svbnNlLXVzYWdlLmh0bWw=" title="http://nmap.org/book/nse-usage.html">Nmap更多扫描方式<i class="fa fa-external-link"></i></span></p>
<h2 id="DirBuster"><a href="#DirBuster" class="headerlink" title="DirBuster"></a>DirBuster</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9DYXRlZ29yeTpPV0FTUF9EaXJCdXN0ZXJfUHJvamVjdA==" title="https://www.owasp.org/index.php/Category:OWASP_DirBuster_Project">DirBuster<i class="fa fa-external-link"></i></span><br>【注】：</p>
<ul>
<li>对扫描出来的目录进行递归扫描</li>
<li>通过扫描出来的结果研究网站的命名规则</li>
</ul>
<h2 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h2><p>计算机指纹识别包括CMS指纹识别、服务器操作系统指纹识别和Web容器指纹识别等。<br>常用识别工具:</p>
<ul>
<li>Nmap</li>
<li>AppPrint</li>
</ul>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>信息收集应以准备为主，速度为辅。熟练掌握核心工具的使用方法，保持自身的耐心和细心度</p>
<h1 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h1>]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Upload-labs Keys</title>
    <url>/2020/04/28/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/upload_labs_keys/</url>
    <content><![CDATA[<p>Welcome to Upload-labs Keys!<br><a id="more"></a></p>
<h1 id="Upload-labs-Keys"><a href="#Upload-labs-Keys" class="headerlink" title="Upload-labs Keys"></a>Upload-labs Keys</h1><h2 id="搭建靶场的注意事项"><a href="#搭建靶场的注意事项" class="headerlink" title="搭建靶场的注意事项"></a>搭建靶场的注意事项</h2><ul>
<li>将upload-labs-master的靶场环境放在phpstudy的www目录下，并将文件名修改为upload-labs</li>
<li>将phpstudy版本修改为降低为5.xx.xx版本，避免版本过高导致Cknife 1.0 release版本在连接服务器时失败</li>
</ul>
<h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><p><mark>考察点：客户端JS检查</mark></p>
<ul>
<li><p>查看源码<br>在源码中定义了允许上传的文件类型如下：  </p>
<figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">$ext_arr = <span class="built_in">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>上传一句话php代码<br>首先我们新建一个允许上传的文件，文件内容为php一句话木马<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass01/pass01_01.png" alt=""></p>
</li>
<li><p>在靶场中上传编写好的文件，点击上传，用burpsuite抓取该数据包<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass01/pass01_02.png" alt=""></p>
</li>
<li><p>将抓取到的数据包发送到Repeater模块<br>在Repeaeter模块中我们将文件的后缀名修改为php，然后点击Go<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass01/pass01_03.png" alt=""></p>
</li>
<li><p>将返回的Response数据中的文件信息复制，通过Cknife来连接此漏洞，Cknife中添加链接如下：<span class="exturl" data-url="aHR0cDovLzEyNy4wLjAuMS91cGxvYWQtbGFicy91cGxvYWQvcGFzczAxLnBocO+8jOi/nuaOpeWvhueggeS4ukAmYW1wO19QT1NU5Lit55qE5YaF5a65" title="http://127.0.0.1/upload-labs/upload/pass01.php，连接密码为@&amp;_POST中的内容">http://127.0.0.1/upload-labs/upload/pass01.php，连接密码为@&amp;_POST中的内容<i class="fa fa-external-link"></i></span><br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass01/pass01_04.png" alt=""></p>
</li>
<li><p>连接成功后能够通过CKnife进入Webshell<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass01/pass01_05.png" alt=""></p>
</li>
</ul>
<h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p><mark>考察点：服务端对数据包的MIME进行检查，需要修改Content-Tyep</mark></p>
<ul>
<li>创建pass02.php文件，文件内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>上传pass02.php，利用burpsuite抓取该数据包<br>当服务器接收到php类型的文件时，Content-Type的值为application/octet-stream，而当文件类型为jpg格式时，Content-Type：image/jpeg<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass02/pass0201.png" alt=""></li>
<li>修改Content-Type字段的值为允许上传的文件类型，然后重放数据包<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass02/pass0202.png" alt=""></li>
<li>访问上传文件的url<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass02/pass0203.png" alt=""></li>
</ul>
<h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><p><mark>考察点：黑名单绕过</mark></p>
<ul>
<li>修改Apache的httpd.conf文件，使其包含如下配置：<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php <span class="string">.php</span> <span class="string">.php3</span> <span class="string">.phtml</span></span><br></pre></td></tr></table></figure>
有了上述配置后，服务器就会将php3，phtml后缀的文件当作php解析</li>
<li>新建一个文件名为pass03.php3，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass03.php3上传至服务器</li>
<li>访问该文件</li>
</ul>
<h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p><mark>考察点：黑名单绕过</mark></p>
<ul>
<li>黑名单中没有包括.htaccess，利用Apache的.htaccess文件上传解析漏洞</li>
<li>靶机中的httpd.conf作如下配置：<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">AllowOverride <span class="keyword">All</span></span><br></pre></td></tr></table></figure></li>
<li>.htaccess文件的内容如下<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">AddType <span class="built_in">application</span>/x-httpd-php .jpg</span><br></pre></td></tr></table></figure>
上述配置使得服务器将所有.jpg后缀的文件当作php文件解析</li>
<li>将.htaccess文件上传到服务器</li>
<li>新建一个文件名为pass04.jpg，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass04.jpg上传至服务器</li>
<li>访问该文件<br>访问该文件时显示该文件被下载</li>
</ul>
<h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p><mark>考察点：大小写绕过</mark></p>
<ul>
<li>黑名单中包括了.htaccess，但是源代码没有转为小写的函数</li>
<li>新建一个文件名为pass05.PhP，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass05.PhP上传至服务器</li>
<li>访问该文件<br>访问该文件时提示http 500错误</li>
</ul>
<h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p><mark>考察点：空格绕过</mark></p>
<ul>
<li>源代码缺少$file_ext = trim($file_ext); //收尾去空</li>
<li>新建一个文件名为pass06.php[空格]，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass06.php[空格]上传至服务器</li>
<li>访问该文件<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass06/pass0601.png" alt=""></li>
</ul>
<h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><p><mark>考察点：文件名后缀加.绕过</mark><br>利用了windows系统的特性，会自动去掉后缀名中最后的.</p>
<ul>
<li>新建一个文件名为pass07.php.，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass07.php.上传至服务器<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass07/pass0701.png" alt=""></li>
<li>访问该文件<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass07/pass0702.png" alt=""></li>
</ul>
<h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><p><mark>考察点：文件名后缀加::$DATA绕过</mark><br>    【注】：<br>    1）.Windows下NTFS文件系统的一个特性，即NTFS文件系统的存储数据流的一个属性 DATA 时，就是请求 a.asp 本身的数据，如果a.asp 还包含了其他的数据流，比如 a.asp:lake2.asp，请求 a.asp:lake2.asp::$DATA，则是请求a.asp中的流数据lake2.asp的流数据内容。<br>    2）.NTFS文件流实际应用<br>    NTFS文件系统包括对备用数据流的支持。这不是众所周知的功能，主要包括提供与Macintosh文件系统中的文件的兼容性。备用数据流允许文件包含多个数据流。每个文件至少有一个数据流。在Windows中，此默认数据流称为：$DATA。</p>
<ul>
<li>新建一个文件名为pass08.php::$DATA，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass08.php::$DATA上传至服务器<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass08/pass0801.png" alt=""></li>
<li>访问时去除后缀<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass08/pass0802.png" alt=""></li>
</ul>
<h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><p><mark>考察点：拼接后的文件名</mark></p>
<ul>
<li>新建一个文件名为pass09.php. .[点+空格+点]，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass09.php. .[点+空格+点]上传至服务器<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass09/pass0901.png" alt=""></li>
<li>访问该文件<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass09/pass0902.png" alt=""></li>
</ul>
<h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><p><mark>考察点：双写绕过</mark></p>
<ul>
<li>新建一个文件名为pass10.php，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass10.php上传至服务器</li>
<li>在Reapeter中修改文件后缀为.phpphp<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass10/pass1001.png" alt=""></li>
<li>访问该文件<br><img src="https://markdown-imag.oss-cn-beijing.aliyuncs.com/Upload-labs/Pass10/pass1002.png" alt=""></li>
</ul>
<h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><p><mark>考察点：%00截断绕过[POST]</mark></p>
<ul>
<li>新建一个文件名为pass11.jpg，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass11.jpg上传至服务器</li>
<li>在Reapeter中修改save_path为../upload/pass11.php%00</li>
<li>访问该文件</li>
<li><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><mark>考察点：%00截断绕过[GET]</mark></li>
<li>新建一个文件名为pass12.php，内容如下：<br>&lt;?php phpinfo(); ?&gt;</li>
<li>修改post参数的值</li>
<li>用hex修改16进制的值</li>
<li>访问该文件</li>
<li><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><mark>考察点：加入jpg|png|gif文件的文件头来绕过</mark></li>
<li>新建一个文件名为pass13.php，内容如下：<br>GIF89a<br>&lt;?php phpinfo(); ?&gt;</li>
<li>将pass13.php上传至服务器</li>
<li>利用文件包含漏洞访问上传文件，<span class="exturl" data-url="aHR0cDovLzEwLjAuMC4xMDgvaW5jbHVkZS5waHA/ZmlsZT0uL3VwbG9hZC84ODIwMTkwNjEyMTQyMDM4LmdpZg==" title="http://10.0.0.108/include.php?file=./upload/8820190612142038.gif">http://10.0.0.108/include.php?file=./upload/8820190612142038.gif<i class="fa fa-external-link"></i></span></li>
</ul>
<blockquote>
<p>未完待续</p>
</blockquote>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>任意文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集总结</title>
    <url>/2020/04/15/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p><strong>摘要</strong>：本文从我对信息收集的理解开始，记述了为什么要做信息收集，以及它的意义,并对信息收集的流程和使用到的工具做了一个简单的梳理。最后，这份文档将处于持续更新状态…</p>
<a id="more"></a>
<h1 id="信息收集基础"><a href="#信息收集基础" class="headerlink" title="信息收集基础"></a>信息收集基础</h1><h2 id="信息收集是什么？为什么要做信息收集？"><a href="#信息收集是什么？为什么要做信息收集？" class="headerlink" title="信息收集是什么？为什么要做信息收集？"></a>信息收集是什么？为什么要做信息收集？</h2><p><strong>(1)我的经历和思考： </strong><br>&emsp;&emsp;当我刚开始接触网络安全的时候，就如同面对这个词语本身，它对我而言是一个新的未知数。于是我们试着从一些熟悉的角度来走近它：黑客、病毒、攻击…，这些看起来稍带负面色彩的字眼似乎是这之前我对于安全方面的全部理解。而随着进一步的学习，我发现之前的自己忽略了一个重要的辩证哲理：“世界上的事物都遵循对立统一规律，没有什么是孤立存在的，万物相互斗争，相互联系，辩证统一。”<br>&emsp;&emsp;网络安全确实和黑客、病毒、攻击这些概念密切相关，但我之前所忽视的是这些消极概念相对立且是我不曾知晓的另一面——白帽子、防御、渗透测试等等一些具有正义感的东西。如果我们能从事物的对立两面来看待问题，或许可以更加地看清楚它的本来面目。<br>&emsp;&emsp;当站在这个落脚点的来回望网络安全这个概念时，算是对它有了入门级的理解了吧。<br>&emsp;&emsp;今天的网络安全基本由攻击和防御两个大板块组成，全球范围内的网络每时每刻都在受到匿名黑客的各种攻击，这些攻击手段日新月异，给依赖于网络生活的现代社会带来了巨大威胁。当然我们小小的个体可能感受不到，但我们或许经历过QQ被盗号，或某个朋友的社交账号被盗后群发了一些奇怪的链接图文；然而对于一些组织、公司乃至是国家，如果遭受黑客攻击而泄露了一些隐私数据，这将可能给受害方造成不可估量的后果。所以为了维护网络的正常秩序和它的安全性，现在各个国家都非常重视这方面的建设和发展……  </p>
<p><strong>(2) 书归正传： </strong><br>&emsp;&emsp;回到在这里要讲的“信息收集”，信息一词，在百度中记录为音讯、消息、通讯系统传输和处理的对象，泛指人类社会传播的一切内容。维基百科中又指出获取信息的“六何法”(何人（Who）、何事（What）、何时（When）、何地（Where）、何解（Why）及如何（How）)。收集，被解释为“使聚集在一起”。故而，所谓信息收集就是把特定的对象聚集到一起，而在网络安全范畴中的对象主要是指那些和计算机相关，并且有助于我们做渗透测试的信息。这些信息组成一张大的信息网络，包括网络信息、主机信息、服务器信息、人员信息等各种不同维度、不同类型的信息。通过收集这些信息，对于一个不怀好意的黑客来说，将有助于他们对目标发起强有力的攻击；而对于维护网络安全的白帽子而言，他们通过掌握这些信息，能够尽可能多的发现测试系统存在的漏洞，并及时修复它们，避免留下安全隐患，在将来造成不必要的损失。<br>&emsp;&emsp;从上面的论述中我们可以大致刚回答开始提出的两个问题：  </p>
<ul>
<li><p>信息收集是什么：网络安全中的信息收集，就是收集某个系统、组织、公司相关的各类信息，比如系统信息、开发信息、网络信息、服务器信息、数据库信息、人员信息等等。当然，某些敏感信息在未取得有关机构的授权时，是不能随便获取的，否则白帽子和邪恶的黑客之间的界限就会变得模糊。因此，还要特别留意法律规范对我们行为的约束。</p>
</li>
<li><p>为什么要做信息收集：通过信息收集，将有助于我们对目标系统进行更加全面的渗透测试，发现漏洞而后修复之，并针对测试的系统给出一份安全测试报告，优化在测试中发现的易受攻击的脆弱环节。简而言之，即未雨绸缪，而非亡羊补牢。</p>
</li>
</ul>
<h1 id="开始前的准备"><a href="#开始前的准备" class="headerlink" title="开始前的准备"></a>开始前的准备</h1><h2 id="信息收集清单"><a href="#信息收集清单" class="headerlink" title="信息收集清单"></a>信息收集清单</h2><p>&emsp;&emsp;在正式开始之前，我们可以列一份清单，就像人们在GTD工作法中所做的那样——把我们要收集的信息尽可能多的列出来，在之后再次执行信息收集这个“动作”时，我们就可以对照这个信息清单来检索哪些信息是需要收集的，哪些不需要。这样一来，一方面，我们可以将这个清单与待测系统所约束的测试范围进行比对，避免非法操作；另一方面，在平常我们挖掘某一SRC厂商的漏洞时，越全面立体的信息搜集，不仅能加快我们发现漏洞的步伐，也能帮助我们找到不同种类漏洞。因此，在正式开始之前，我们可以列出一份待收集信息的清单。</p>
<table>
    <tr>
        <th colspan="2">待收集信息清单</th>
    </tr >
    <tr >
        <td>基础信息</td>
        <td>
        <b>whois信息</b>： <br> 
 1.注册商  <br> 
 2.注册人<br> 
 3.邮箱信息<br> 
 4.DNS解析服务器<br> 
 5.注册人联系电话<br> 
 6.企业备案信息<br> 
        </td>  
    </tr>
    <tr >
        <td>域名信息</td>
        <td>
        <b>whois信息</b>： <br> 
 1.注册商  <br> 
 2.注册人<br> 
 3.邮箱信息<br> 
 4.DNS解析服务器<br> 
 5.注册人联系电话<br> 
 6.企业备案信息<br> 
        </td>  
    </tr>

</table>



























]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows系统中建立隐藏账号</title>
    <url>/2020/03/09/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Windows%E7%B3%BB%E7%BB%9F/%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8BWindows%E9%9A%90%E8%97%8F%E8%B4%A6%E5%8F%B7/</url>
    <content><![CDATA[<p>在windows 7系统建立一个隐藏账号的过程…<br><a id="more"></a></p>
<p>首先让我们来了解一些关于隐藏账户的知识<br><div class="note info">
            <h4 id="windows隐藏账户"><a href="#windows隐藏账户" class="headerlink" title="windows隐藏账户"></a>windows隐藏账户</h4><p>隐藏账户就是在开机登录的时候看不到，在控制面板的用户中心中看不到，在管理工具中本地用户和组中还是看不到。通过为注册表指定权限后在注册表中也是看不到，是真正的隐形账户。</p>
          </div></p>
<div class="note success no-icon">
            <p>ps:现在有些版本的win10系统在用户和组管理上做了优化，我们可能在计算机管理面板中看不到“用户和组”这个文件夹了，所以这里介绍的是在win7系统中建立隐藏账号的过程。</p>
          </div>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>如下图所示{}</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<h1 id="建立cmd隐藏账号"><a href="#建立cmd隐藏账号" class="headerlink" title="建立cmd隐藏账号"></a>建立cmd隐藏账号</h1><p>win+R打开对话框，输入cmd启动命令行终端，输入以下命令创建用户，成功后会有执行成功的提示。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//example为用户名，123为密码，$表示隐藏用户</span><br><span class="line">net user example$ 123 /add</span><br><span class="line">//将用户添加到管理员组</span><br><span class="line">net localgroup administrators example$</span><br></pre></td></tr></table></figure></p>
<h1 id="SAM"><a href="#SAM" class="headerlink" title="SAM"></a>SAM</h1><h1 id=""><a href="#" class="headerlink" title="#"></a>#</h1><h1 id="注册表"><a href="#注册表" class="headerlink" title="注册表"></a>注册表</h1><h1 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h1>]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>windows基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux初级</title>
    <url>/2020/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/Linux/Linux%E5%88%9D%E7%BA%A7/</url>
    <content><![CDATA[<p>Linux一些基础知识…<br><a id="more"></a></p>
<blockquote>
<p>为什么Linux中rwx对应的权值是421而不是其他数值？</p>
</blockquote>
<p>&emsp;&emsp;421分别对应着2的幂次方的结果(从0开始)，即2^2,2^1,2^0结果为4,2,1。这种设定方式于计算机的二进制存储理念一致，能加快计算速度。<br>&emsp;&emsp;根据某一用户当前的权值来判断他拥有的权限类型方式如下：</p>
<ul>
<li>如果一个人拥有读和写的权限，现在他的权限值为6，当需要判断他是否拥有写权限时，只需要用6和2进行按位与运算(6 &amp; 2 = 2)，结果非0 ，所以可以判断拥有此权限。</li>
<li>当需要判断他是否拥有可执行权限时，同样只需要用 6 和 1 进行按位与运算(6 &amp; 1 = 0 )，结果为0，所以可以判断不拥有此权限。</li>
</ul>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p>1.<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZvbGxvd015SW5jbGluYXRpb25zL2FydGljbGUvZGV0YWlscy83MjEyMzQyOQ==" title="https://blog.csdn.net/followMyInclinations/article/details/72123429">哈哈满<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Python基础知识</title>
    <url>/2020/02/22/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/Python/python%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>这是《python编程·从入门到实践》一书的读书笔记，从这里开始了解关于python的基础知识，当然这也将是一份复习回顾的好材料…</p>
<a id="more"></a>
<div class="note primary">
            <p>2月20日至3月1日有关python书籍阅读的作业均摘自本“阅读笔记”文档中，为节约篇幅，不再将笔记单独成文，所有内容均可在本文档相应章节中查阅。  </p>
          </div>
<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><h3 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h3><div class="note info">
            <p>“起步”章节主要是教我们搭建python环境，并开始用相应的工具来编写运行第一个程序——Hello World。  </p>
          </div>
<div class="tabs" id="forth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#forth-unique-name-1">下载Python</a></li><li class="tab"><a href="#forth-unique-name-2">下载Geany</a></li></ul><div class="tab-content"><div class="tab-pane active" id="forth-unique-name-1"><p>访问网址<span class="exturl" data-url="aHR0cDovL3B5dGhvbi5vcmcvZG93bmxvYWRzLw==" title="http://python.org/downloads/">Python<i class="fa fa-external-link"></i></span>下载最新版本.</p></div><div class="tab-pane" id="forth-unique-name-2"><p>访问网址<span class="exturl" data-url="aHR0cDovL2dlYW55Lm9yZy8=" title="http://geany.org/">Geany<i class="fa fa-external-link"></i></span>下载最新版本.</p></div></div></div>
<blockquote>
<p>在Geany中运行python代码需要我们在Build选项中进行设置，这在书中的1.2.3小节中有提到，值得注意的是，编译命令处应该是你能够运行.py文件的一个命令，比如我的是python，那么就填为python -m py_compile “%f”。</p>
</blockquote>
<div class="note success">
            <p>我们经常会在学习的任何阶段遇到问题，哪怕已经成为这个领域的专家，书中提到“离开计算机”、“推导重来”、“向他人求助”或许都是不错的方法，但有时却很需要勇气和智慧。</p>
          </div>
<h3 id="动手试一试"><a href="#动手试一试" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="note info">
            <p>“试一试”环节类似于常见书籍中的思考题部分，通过它能够拓宽我们学习python的宽度。</p>
          </div>
<div class="tabs" id="chapter0101"><ul class="nav-tabs"><li class="tab"><a href="#chapter0101-1">1-1.Python.org</a></li><li class="tab"><a href="#chapter0101-2">1-2.输入错误</a></li><li class="tab active"><a href="#chapter0101-3">1-3.删除元素</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0101-1"><p>&emsp;&emsp;以前似乎没有静静看过一个计算机语言的官网。大致看了一下python的网站，上面的内容很丰富，学习python不同层次人群都能够在这里找到丰富的资料，我只是从一个新手的角度出发去看这个网址，在about-gettingstarted-learning(code samples)-<span class="exturl" data-url="aHR0cDovL3d3dy5lZmZib3Qub3JnL3pvbmUvbGlicmFyeWJvb2staW5kZXguaHRt" title="http://www.effbot.org/zone/librarybook-index.htm">The Python Standard Library<i class="fa fa-external-link"></i></span>这里我看到了python为新手提供的样例代码，是一份厚实的电子书籍，这份资料在1999年就开始编辑了。可见，python.org网址凝结了python所有工作人员无数的心血。另外，在主页上还有一个<span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9qb2JzLw==" title="https://www.python.org/jobs/">Job<i class="fa fa-external-link"></i></span>连接，为我们提供了和python相关的工作信息，可以通过这里来了解职业需求是怎样的。  </p></div><div class="tab-pane" id="chapter0101-2"><p>&emsp;&emsp;随便输入一个字符串，比如：ManKeepUP，那么程序运行后将提示“ManKeepUP not defined”的错误。一个不会导致错误的输入错误？比如将print写成pint，然后我们在前面加一个‘#’就不会报错了，因为‘#’后面代码被注释了。</p></div><div class="tab-pane active" id="chapter0101-3"><p>&emsp;&emsp;学到知识后来尝试做下面的程序吧！</p>
<ul>
<li>游戏：用python做一个对抗游戏，他们可以放技能来一决高下，就像拳皇(<em>The king of Fighters</em>)那样，或许这个游戏的名字可以叫做<span class="label success">叶问</span>(<em>Ip Man</em>)。</li>
<li>安全：肯定要用python在安全领域发挥它的作用的，让我们来尝试用python编写一个端口扫描器的脚本吧。</li>
<li>爬虫：python与“爬虫”两个字似乎有着天然的联系，不妨用python去爬取一些你感兴趣的数据吧，但请记住<span class="label danger">一定要在法律许可的范围内进行！</span> </li>
</ul></div></div></div>
<h2 id="变量和简单数据类型"><a href="#变量和简单数据类型" class="headerlink" title="变量和简单数据类型"></a>变量和简单数据类型</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>&emsp;&emsp;在python中我们不需要事先指定类型就可使用一个变量(这一点和其他编程语言不同，比如C)，变量存储了一个与它相关联的信息。</p>
<h3 id="命名和使用"><a href="#命名和使用" class="headerlink" title="命名和使用"></a>命名和使用</h3><ul>
<li>只能是字母、数字和下划线</li>
<li>只能以字母或下划线开头</li>
<li>不能含空格</li>
<li>不能是关键字<div class="note danger">
            <p>变量名应既简短又具有描述性，慎用小写字母l和大写字母O，变量名避免使用大写字母。</p>
          </div>
</li>
</ul>
<h3 id="动手试一试-1"><a href="#动手试一试-1" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0201"><ul class="nav-tabs"><li class="tab"><a href="#chapter0201-1">2-1.简单消息</a></li><li class="tab active"><a href="#chapter0201-2">2-2.多条简单消息</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0201-1"><p>用下面的代码通过变量打印一条消息。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">news = <span class="string">"This is a new msg!"</span>  </span><br><span class="line">print(news)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0201-2"><p>用下面的代码打印多条消息。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">news = <span class="string">"Good Morning."</span></span><br><span class="line">print(news)</span><br><span class="line">news = <span class="string">"Good Evening."</span></span><br><span class="line">print(news)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>&emsp;&emsp;字符串可以包裹在‘’或“”中。</p>
<h4 id="修改字符串大小写"><a href="#修改字符串大小写" class="headerlink" title="修改字符串大小写"></a>修改字符串大小写</h4><ul>
<li>title()：以首字母大写的方式显示每个单词</li>
<li>upper()：将字符串改为全部大写</li>
<li>lower()：将字符串改为全部小写</li>
</ul>
<h4 id="连接字符串"><a href="#连接字符串" class="headerlink" title="连接字符串"></a>连接字符串</h4><p>&emsp;&emsp;用’+’号来连接两个字符串。</p>
<h4 id="添加空白"><a href="#添加空白" class="headerlink" title="添加空白"></a>添加空白</h4><p>&emsp;&emsp;通过在字符串中添加换行符’\n’和制表符’\t’来添加空白。</p>
<h4 id="删除空白"><a href="#删除空白" class="headerlink" title="删除空白"></a>删除空白</h4><p>&emsp;&emsp;在python中，空白字符是有意义的，可用以下几种方式删除字符串中的空白字符。</p>
<ul>
<li>strip():删除字符串两端的空白</li>
<li>lstrip():删除字符串开头的空白(l为left)</li>
<li>rstrip():删除字符串末尾的空白(r为right)</li>
<li>正则表达式:删除字符串中的所有空白字符，用法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re </span><br><span class="line">strinfo = re.compile(<span class="string">' '</span>)</span><br><span class="line">str1 = <span class="string">' I like eating apple!  '</span></span><br><span class="line"><span class="comment">#删除str1中的空白字符，保存在str2中</span></span><br><span class="line">str2 = strinfo.sub(<span class="string">''</span>,str1)</span><br><span class="line">print(<span class="string">'str2'</span>)</span><br></pre></td></tr></table></figure></li>
<li>join()&amp;&amp;split():删除字符串中的所有空白字符，用法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">' I like eating apple!  '</span></span><br><span class="line">str2 = <span class="string">''</span>.join(str1,split())</span><br><span class="line">print(str2)</span><br></pre></td></tr></table></figure></li>
<li>replace():删除字符串中的所有空白字符，用法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">str1 = <span class="string">' I like eating apple!  '</span></span><br><span class="line">str2 = str1.replace(<span class="string">""</span>,<span class="string">""</span>)</span><br><span class="line">print(str2)</span><br></pre></td></tr></table></figure>
<div class="note warning">
            <h4 id="暂未解决："><a href="#暂未解决：" class="headerlink" title="暂未解决："></a>暂未解决：</h4><p>还有通过translate()方法也可以删除字符串中的指定字符，如何用它来删除空白字符？</p>
          </div>
<div class="note danger">
            <h4 id="字符串语法错误："><a href="#字符串语法错误：" class="headerlink" title="字符串语法错误："></a>字符串语法错误：</h4><p>在双引号内包含撇号是正确的，但如果在单引号内包含撇号，将可能会把撇号后面的内容视为python代码，从而提示语法错误。</p>
          </div>
<h3 id="动手试一试-2"><a href="#动手试一试-2" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0202"><ul class="nav-tabs"><li class="tab"><a href="#chapter0202-1">2-3.个性化消息</a></li><li class="tab"><a href="#chapter0202-2">2-4.调整名字的大小写</a></li><li class="tab"><a href="#chapter0202-3">2-5.名言</a></li><li class="tab"><a href="#chapter0202-4">2-6.名言2</a></li><li class="tab active"><a href="#chapter0202-5">2-7.剔除人名中的空白</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0202-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">"Jackson"</span></span><br><span class="line">print(<span class="string">"Hello "</span> + name + <span class="string">", would you like to learn some python today?"</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0202-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">"lebron·james"</span></span><br><span class="line">print(name.lower())</span><br><span class="line">print(name.upper())</span><br><span class="line">print(name.title())</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0202-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">"Steve·Jobs"</span></span><br><span class="line">print(name + <span class="string">" once said, "</span> + <span class="string">'"Stay foolish, stay hungry."'</span> )</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0202-4"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">famous_person = <span class="string">"Steve·Jobs"</span></span><br><span class="line">message = <span class="string">" Stay foolish, stay hungry."</span></span><br><span class="line">print(famous_person + <span class="string">" once said,"</span> + <span class="string">'"'</span> + message +<span class="string">'"'</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0202-5"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">"    Wang \nyuan \tcan "</span></span><br><span class="line">print(name)</span><br><span class="line">print(<span class="string">"\n"</span> + name.lstrip())</span><br><span class="line">print(<span class="string">"\n"</span> + name.rstrip())</span><br><span class="line">print(<span class="string">"\n"</span> + name.strip())</span><br></pre></td></tr></table></figure></div></div></div>
</li>
</ul>
<h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><ul>
<li>加减乘除：+，-，*，/</li>
<li>乘方：**  </li>
<li>优先级：遵循从左至右的运算法则，可用括号将需要先算的内容括起来。  </li>
<li>str():可用该函数将数字转化为字符串。  <div class="note warning">
            <p>python2中计算整数除法时直接删除小数部分。</p>
          </div>
</li>
</ul>
<h3 id="动手试一试-3"><a href="#动手试一试-3" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0203"><ul class="nav-tabs"><li class="tab"><a href="#chapter0203-1">2-8.数字8</a></li><li class="tab active"><a href="#chapter0203-2">2-9.最喜欢的数字</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0203-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="number">4</span> + <span class="number">4</span>)</span><br><span class="line">print(<span class="number">12</span> - <span class="number">4</span>)</span><br><span class="line">print(<span class="number">2</span> * <span class="number">4</span>)</span><br><span class="line">print(<span class="number">32</span> / <span class="number">4</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0203-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = <span class="number">7</span></span><br><span class="line">print(<span class="string">"number "</span> + str(<span class="number">7</span>) + <span class="string">" is my favorite number."</span>)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>&emsp;&emsp;在团队化的工作过程中，通过添加注释能让我们的代码更加易读，良好的注释应该基本具备的特点是阐述代码要做什么，以及是如何做的。</p>
<h3 id="动手试一试-4"><a href="#动手试一试-4" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0204"><ul class="nav-tabs"><li class="tab"><a href="#chapter0204-1">2-10.添加注释</a></li><li class="tab"><a href="#chapter0204-2">python之禅01</a></li><li class="tab"><a href="#chapter0204-3">python之禅02</a></li><li class="tab active"><a href="#chapter0204-4">python之禅03</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0204-1"><p>给一份代码添加简单的注释:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Name: Wang yuancan</span></span><br><span class="line"><span class="comment">#Data: 2020/02/25</span></span><br><span class="line"><span class="comment">#在python3中进行简单的加减乘除四则运算</span></span><br><span class="line">print(<span class="number">4</span> + <span class="number">4</span>)</span><br><span class="line">print(<span class="number">12</span> - <span class="number">4</span>)</span><br><span class="line">print(<span class="number">2</span> * <span class="number">4</span>)</span><br><span class="line">print(<span class="number">32</span> / <span class="number">4</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0204-2"><p>英文部分摘自“Python之禅”，中文内容为笔者方便记忆所写。</p>
<blockquote>
<p>1.<em>Beautiful is better than ugly.</em></p>
</blockquote>
<p>“代码如人，须干净整洁。”</p>
<blockquote>
<p>2.<em>Explicit is better than implicit.</em></p>
</blockquote>
<p>“清楚明白，直奔要义。”</p>
<blockquote>
<p>3.<em>Simple is better than complex.</em></p>
</blockquote>
<p>“若能简单，为什么不？”</p>
<blockquote>
<p>4.<em>Complex is better than complicated.</em></p>
</blockquote>
<p>“复杂简单化。”</p>
<blockquote>
<p>5.<em>Flat is better than nested.</em></p>
</blockquote>
<p>“笼中笼不如眼前物。”</p></div><div class="tab-pane" id="chapter0204-3"><blockquote>
<p>6.<em>Sparse is better than dense.</em></p>
</blockquote>
<p>“保持清爽。”</p>
<blockquote>
<p>7.<em>Readability counts.</em></p>
</blockquote>
<p>“代码也是一种文字，文字须是可读性强的。”</p>
<blockquote>
<p>8.<em>Special cases aren’t special enough to break the rules.</em></p>
</blockquote>
<p>“特立独行的猪亦不可打破规则。”</p>
<blockquote>
<p>9.<em>Although practicality beats purity.</em></p>
</blockquote>
<p>“临时的实用主义。”</p>
<blockquote>
<p>10.<em>Errors should never pass silently, Unless explicitly silenced.</em></p>
</blockquote>
<p>“忽略错误，就是忽略成长。”</p></div><div class="tab-pane active" id="chapter0204-4"><blockquote>
<p>11.<em>In the face of ambiguity, refuse the temptation to guess.</em></p>
</blockquote>
<p>“有猜测之力，不如动手实践。”</p>
<blockquote>
<p>12.<em>There should be one— and preferably only one —obvious way to do it.</em></p>
</blockquote>
<p><div class="note info">
            <p>ps:Although that way may not be obvious at first unless you’re Dutch.</p>
          </div><br>“打开一把锁的最佳方式是找来对应的钥匙。”</p>
<blockquote>
<p>13.<em>Now is better than never, Although never is often better than right now.</em></p>
</blockquote>
<p>“三思而行，方才行之有效。”</p>
<blockquote>
<p>14.<em>If the implementation is hard to explain, it’s a bad idea, If the implementation is easy to explain, it may be a good idea.</em></p>
</blockquote>
<p>“普适易懂，往往是最好的。”</p>
<blockquote>
<p>15.<em>Namespaces are one honking great idea — let’s do more of those!</em></p>
</blockquote>
<p>“<span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9weXRob24zL3B5dGhvbjMtbmFtZXNwYWNlLXNjb3BlLmh0bWw=" title="https://www.runoob.com/python3/python3-namespace-scope.html">命名空间<i class="fa fa-external-link"></i></span>是一种绝佳的理念，应该多加利用。”</p></div></div></div>
<h2 id="列表简介"><a href="#列表简介" class="headerlink" title="列表简介"></a>列表简介</h2><h3 id="列表定义"><a href="#列表定义" class="headerlink" title="列表定义"></a>列表定义</h3><p>&emsp;&emsp;在Python中，用方括号[]来表示列表，并用逗号来分隔其中的元素。<br><div class="note warning">
            <p>第一个列表元素的索引为0，而不是1。可以将索引指定为-1，可让Python返回最后一个列表元素。</p>
          </div></p>
<h3 id="动手试一试-5"><a href="#动手试一试-5" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0301"><ul class="nav-tabs"><li class="tab"><a href="#chapter0301-1">3-1.姓名</a></li><li class="tab"><a href="#chapter0301-2">3-2.问候语</a></li><li class="tab active"><a href="#chapter0301-3">3-3.自己的列表</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0301-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">names = [<span class="string">'Dengzihao'</span>,<span class="string">'Bailu'</span>,<span class="string">'Wangyuancan'</span>,<span class="string">'Dengbiao'</span>]</span><br><span class="line">print(names[<span class="number">0</span>])</span><br><span class="line">print(names[<span class="number">1</span>])</span><br><span class="line">print(names[<span class="number">-2</span>])</span><br><span class="line">print(names[<span class="number">-1</span>])</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0301-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">names = [<span class="string">'Dengzihao'</span>,<span class="string">'Bailu'</span>,<span class="string">'Wangyuancan'</span>,<span class="string">'Dengbiao'</span>]</span><br><span class="line">message = names[<span class="number">0</span>].title()+<span class="string">","</span>+<span class="string">"How about going?"</span></span><br><span class="line">print(message)</span><br><span class="line">message = names[<span class="number">1</span>].title()+<span class="string">","</span>+<span class="string">"How about going?"</span></span><br><span class="line">print(message)</span><br><span class="line">message = names[<span class="number">2</span>].title()+<span class="string">","</span>+<span class="string">"How about going?"</span></span><br><span class="line">print(message)</span><br><span class="line">message = names[<span class="number">3</span>].title()+<span class="string">","</span>+<span class="string">"How about going?"</span></span><br><span class="line">print(message)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0301-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">vehicles = [<span class="string">'bicycle'</span>,<span class="string">'Tricycle'</span>,<span class="string">'Motorcycle'</span>,<span class="string">'Sedan'</span>]</span><br><span class="line"></span><br><span class="line">declaration = <span class="string">"I want to own a"</span> + vehicles[<span class="number">-1</span>].title()</span><br><span class="line">print(declaration)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="修改、添加和删除元素"><a href="#修改、添加和删除元素" class="headerlink" title="修改、添加和删除元素"></a>修改、添加和删除元素</h3><div class="tabs" id="one"><ul class="nav-tabs"><li class="tab"><a href="#one-1">修改元素</a></li><li class="tab"><a href="#one-2">添加元素</a></li><li class="tab active"><a href="#one-3">删除元素</a></li></ul><div class="tab-content"><div class="tab-pane" id="one-1"><p>修改列表中的元素只需要对该元素重新赋值即可</p></div><div class="tab-pane" id="one-2"><ul>
<li>append():在列表的末尾附加元素，语法如下：<br><span class="label success">ps:我们可以通过不断的在列表末尾附加新元素的方法来为列表赋值。</span> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">列表名.append(<span class="string">'新元素'</span>)</span><br></pre></td></tr></table></figure></li>
<li>insert():在列表的任意位置添加新元素，语法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">列表名.insert(插入位置,<span class="string">'新元素'</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul></div><div class="tab-pane active" id="one-3"><ul>
<li>del():使用del可删除任何位置处的列表元素，语法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">del</span>.列表名(删除位置)</span><br></pre></td></tr></table></figure></li>
<li>pop():可删除列表末尾的元素，并让你能够接着使用它，语法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#删除末尾元素，并获取值</span></span><br><span class="line">变量 = 列表名.pop()</span><br><span class="line"><span class="comment">#删除任意元素并获取值</span></span><br><span class="line">变量 = 列表名.pop(删除位置)</span><br></pre></td></tr></table></figure></li>
<li>remove():删除指定值的元素，语法如下<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">列表名.remove(‘指定删除的列表元素值’)</span><br></pre></td></tr></table></figure><br><span class="label danger">ps:方法remove()只删除第一个指定的值。如果要删除的值可能在列表中出现多次，就需要使用循环来判断是否删除了所有这样的值。</span>  </li>
</ul></div></div></div>
<h2 id="操作列表"><a href="#操作列表" class="headerlink" title="操作列表"></a>操作列表</h2><p>&emsp;&emsp;下面将尝试来对列表中的元素执行一些操作。</p>
<h3 id="遍历列表"><a href="#遍历列表" class="headerlink" title="遍历列表"></a>遍历列表</h3><p>&emsp;&emsp;通过for循环语句来帮助我们遍历一个列表。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#magicians.py</span></span><br><span class="line">magicians = [<span class="string">'dengzihao'</span>,<span class="string">'bailu'</span>,<span class="string">'wangyuancan'</span>]</span><br><span class="line"><span class="keyword">for</span> magician <span class="keyword">in</span> magicians:</span><br><span class="line">	print(magicians)</span><br></pre></td></tr></table></figure><br>&emsp;&emsp;我们可以在for循环体中执行更多的语句，for语句后面且属于循环组成部分的代码行应该缩进，那些没有保持缩进的代码将不被认为在for循环体内。</p>
<div class="note warning">
            <p>for语句所在行末应有一个冒号，且后面另起的一行代码应该缩进，至于其他行的代码则根据其是否属于for循环体来确定是否缩进。</p>
          </div>
<h3 id="动手试一试-6"><a href="#动手试一试-6" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0401"><ul class="nav-tabs"><li class="tab"><a href="#chapter0401-1">4-1.披萨</a></li><li class="tab active"><a href="#chapter0401-2">4-2.动物</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0401-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#code01</span></span><br><span class="line">pizzas = [<span class="string">'Durian'</span>,<span class="string">'Ham'</span>,<span class="string">'Chicken'</span>,<span class="string">'Bacon'</span>]</span><br><span class="line"><span class="keyword">for</span> pizza <span class="keyword">in</span> pizzas:</span><br><span class="line">    print(pizza)</span><br><span class="line">    <span class="comment">#print('I like'+ pizza + 'pizza') </span></span><br><span class="line">print(<span class="string">"I really love pizza!"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#code02</span></span><br><span class="line">pizzas = [<span class="string">'Durian'</span>,<span class="string">'Ham'</span>,<span class="string">'Chicken'</span>,<span class="string">'Bacon'</span>]</span><br><span class="line"><span class="keyword">for</span> pizza <span class="keyword">in</span> pizzas:</span><br><span class="line">    <span class="comment">#print('I like'+ pizza + 'pizza') </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#code03</span></span><br><span class="line">pizzas = [<span class="string">'Durian'</span>,<span class="string">'Ham'</span>,<span class="string">'Chicken'</span>,<span class="string">'Bacon'</span>]</span><br><span class="line"><span class="keyword">for</span> pizza <span class="keyword">in</span> pizzas:</span><br><span class="line">    print(pizza)</span><br><span class="line">    print(<span class="string">'I like'</span>+ pizza + <span class="string">'pizza'</span>) </span><br><span class="line">print(<span class="string">"I really love pizza!"</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0401-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#code01</span></span><br><span class="line">birds = [<span class="string">'sparrow'</span>,<span class="string">'swallow'</span>,<span class="string">'egret'</span>,<span class="string">'myna'</span>]</span><br><span class="line"><span class="keyword">for</span> bird <span class="keyword">in</span> birds:</span><br><span class="line">    print(bird)</span><br><span class="line"></span><br><span class="line"><span class="comment">#code02</span></span><br><span class="line">birds = [<span class="string">'sparrow'</span>,<span class="string">'swallow'</span>,<span class="string">'egret'</span>,<span class="string">'myna'</span>]</span><br><span class="line"><span class="keyword">for</span> bird <span class="keyword">in</span> birds:</span><br><span class="line">    print(bird)</span><br><span class="line">    print(<span class="string">"The"</span> + bird + <span class="string">"is one of the important birds."</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#code03</span></span><br><span class="line">birds = [<span class="string">'sparrow'</span>,<span class="string">'swallow'</span>,<span class="string">'egret'</span>,<span class="string">'myna'</span>]</span><br><span class="line"><span class="keyword">for</span> bird <span class="keyword">in</span> birds:</span><br><span class="line">    print(bird)</span><br><span class="line">    print(<span class="string">"The"</span> + bird + <span class="string">"is one of the important birds."</span>)</span><br><span class="line">print(<span class="string">"Any bird can make its own unique sound!"</span>)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="创建数值列表"><a href="#创建数值列表" class="headerlink" title="创建数值列表"></a>创建数值列表</h3><p>&emsp;&emsp;列表天生适合用来存放数字集合，python中就提供了丰富的工具让我们来高效地处理数字列表，那么首先让我们来创建一个数字列表。</p>
<div class="tabs" id="chapter0402"><ul class="nav-tabs"><li class="tab"><a href="#chapter0402-1">生成数字列表</a></li><li class="tab"><a href="#chapter0402-2">计算数字的平方值</a></li><li class="tab active"><a href="#chapter0402-3">列表的统计计算</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0402-1"><ul>
<li>range()：函数range()能够被用来打印一定范围内的数字，但请注意数字的起止范围(<span class="label success">即range(1,5)将打印数字1,2,3,4</span>)  </li>
<li>通过list()函数我们可以将range()函数产生的数字转换为列表，像下面这样：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">numbers = list(range(<span class="number">1</span>,<span class="number">6</span>))</span><br><span class="line">print(number)</span><br></pre></td></tr></table></figure></li>
<li>range()函数中允许我们创建指定步长的数集(即等差数列)，只需要再传入一个步长参数即可。<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">even_numbers = list(range(<span class="number">2</span>,<span class="number">11</span>,<span class="number">2</span>))</span><br><span class="line">print(even_numbers)</span><br></pre></td></tr></table></figure>
</li>
</ul></div><div class="tab-pane" id="chapter0402-2"><p>python中用两个**来表示数值的乘方运算</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">squares = [] </span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>): </span><br><span class="line">    square = value**<span class="number">2</span> </span><br><span class="line">    squares.append(square) </span><br><span class="line">print(squares)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0402-3"><ul>
<li>min()：找出列表的最小值</li>
<li>max()：找出列表的最大值</li>
<li>sum()：对列表中的数字求和</li>
</ul></div></div></div>
<h2 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h2><p>&emsp;&emsp;if语句让你能够检查程序的当前状态，并据此采取相应的措施。</p>
<h3 id="条件测试"><a href="#条件测试" class="headerlink" title="条件测试"></a>条件测试</h3><p>&emsp;&emsp;用<mark>“==”</mark>号检查是否相等，用<mark>“！=”</mark>号检查是否不等，这些符号可以用于比较字符串或者数字是否相等。python中的逻辑与和逻辑或分别用单词<mark>and</mark>和<mark>or</mark>表示。此外，还可以用<mark>in</mark>和<mark>not in</mark>用于检查特定值是否在(不在)列表中。<br><div class="note warning">
            <p>在Python中检查是否相等时区分大小写，两个大小写不同的值会被视为不相等；if语句和for一样在最后面有冒号。</p>
          </div></p>
<h1 id="动手试一试-7"><a href="#动手试一试-7" class="headerlink" title="动手试一试"></a>动手试一试</h1><div class="tabs" id="chapter0501"><ul class="nav-tabs"><li class="tab"><a href="#chapter0501-1">5-1.条件测试</a></li><li class="tab active"><a href="#chapter0501-2">5-2.更多的条件测试</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0501-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">lipstick = <span class="string">'anima'</span></span><br><span class="line">print(<span class="string">"Is lipstick == 'dior'? I predict False."</span>)</span><br><span class="line">print(lipstick == <span class="string">'dior'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nIs lipstick == 'anima'? I predict True."</span>)</span><br><span class="line">print(lipstick == <span class="string">'anima'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nIs lipstick == 'Anima'? I predict False."</span>)</span><br><span class="line">print(lipstick == <span class="string">'Anima'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nIs lipstick == 'lipstick.lower()'? I predict True."</span>)</span><br><span class="line">print(lipstick == lipstick.lower())</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n9 &gt; 8 and 9 &lt; 10 ? I predict True."</span>)</span><br><span class="line">print(<span class="number">9</span> &gt; <span class="number">8</span> <span class="keyword">and</span> <span class="number">9</span> &lt; <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n9 &lt; 8 or 9 &gt; 10 ? I predict False."</span>)</span><br><span class="line">print(<span class="number">9</span> &lt; <span class="number">8</span> <span class="keyword">or</span> <span class="number">9</span> &gt; <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">Superstar = [<span class="string">'James'</span>,<span class="string">'Bryant'</span>,<span class="string">'Jordan'</span>,<span class="string">'Irving'</span>]</span><br><span class="line">print(<span class="string">"\nJordan is not in the Superstar list? I predict False."</span>)</span><br><span class="line">print(<span class="string">'Jordan'</span> <span class="keyword">not</span> <span class="keyword">in</span> Superstar)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nWestbrook is not in the Superstar list? I predict True."</span>)</span><br><span class="line">print(<span class="string">'Westbrook'</span> <span class="keyword">not</span> <span class="keyword">in</span> Superstar)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nJames in the Superstar list? I predict True."</span>)</span><br><span class="line">print(<span class="string">'James'</span> <span class="keyword">in</span> Superstar)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0501-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">food = <span class="string">'noodles'</span></span><br><span class="line"><span class="keyword">if</span> food == <span class="string">'noodles'</span>:</span><br><span class="line">    print(<span class="string">'True'</span>)</span><br><span class="line"><span class="keyword">if</span> food != <span class="string">"apple"</span>:</span><br><span class="line">    print(<span class="string">"False"</span>)</span><br><span class="line">    </span><br><span class="line">name = <span class="string">"Anna"</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">"anna"</span> == name.lower():</span><br><span class="line">    print(<span class="string">"True"</span>)</span><br><span class="line">    </span><br><span class="line">number = <span class="number">12</span></span><br><span class="line"><span class="keyword">if</span> number == <span class="number">12</span>:</span><br><span class="line">    print(<span class="string">"True"</span>)</span><br><span class="line"><span class="keyword">if</span> number != <span class="number">12</span>:</span><br><span class="line">    print(<span class="string">"False"</span>)</span><br><span class="line"><span class="keyword">if</span> number &gt; <span class="number">10</span>:</span><br><span class="line">    print(<span class="string">"True"</span>)</span><br><span class="line"><span class="keyword">if</span> number &lt; <span class="number">9</span>:</span><br><span class="line">    print(<span class="string">"False"</span>)</span><br><span class="line"><span class="keyword">if</span> number &gt;= <span class="number">7</span>:</span><br><span class="line">    print(<span class="string">"True"</span>)</span><br><span class="line"><span class="keyword">if</span> number &lt;= <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">"False"</span>)</span><br><span class="line"><span class="keyword">if</span> number &gt; <span class="number">10</span> <span class="keyword">and</span> number &lt; <span class="number">15</span>:</span><br><span class="line">    print(<span class="string">"True"</span>)</span><br><span class="line"><span class="keyword">if</span> number &lt; <span class="number">10</span> <span class="keyword">or</span> number &gt;<span class="number">39</span>:</span><br><span class="line">    print(<span class="string">"False"</span>)    </span><br><span class="line">even_number = [<span class="string">'2'</span>,<span class="string">'4'</span>,<span class="string">'6'</span>,<span class="string">'8'</span>]</span><br><span class="line">print(<span class="string">'6'</span> <span class="keyword">not</span> <span class="keyword">in</span> even_number)</span><br><span class="line">print(<span class="string">'2'</span> <span class="keyword">in</span> even_number)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="多种if语句结构"><a href="#多种if语句结构" class="headerlink" title="多种if语句结构"></a>多种if语句结构</h3><ul>
<li>简单的if语句，语法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> conditional_test:</span><br><span class="line">	do something</span><br></pre></td></tr></table></figure></li>
<li>if-else语句，只会执行两者中的一个，语法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> conditional_test:</span><br><span class="line">	do something</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	do something</span><br></pre></td></tr></table></figure></li>
<li>if-elif-else语句，语法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> conditional_test:</span><br><span class="line">	do something</span><br><span class="line"><span class="keyword">elif</span> condition_test:</span><br><span class="line">	do something</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">	do something</span><br></pre></td></tr></table></figure>
<div class="note success">
            <p>ps:这里的elif语句可以使用多个以测试多种条件，而else语句在某些情形下可以省略，让代码更加清晰。</p>
          </div></li>
<li>用几个独立的if语句来测试多个条件，语法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> conditional_test:</span><br><span class="line">	do something</span><br><span class="line"><span class="keyword">if</span> conditional_test:</span><br><span class="line">	do something</span><br><span class="line"><span class="keyword">if</span> conditional_test:</span><br><span class="line">	do something</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h3 id="动手试一试-8"><a href="#动手试一试-8" class="headerlink" title="动手试一试"></a>动手试一试</h3>&emsp;&emsp;<strong>5-3.外星人的颜色#1：</strong><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alien_color = <span class="string">"yellow"</span></span><br><span class="line"><span class="keyword">if</span> alien_color == <span class="string">"green"</span>:</span><br><span class="line">	print(<span class="string">"Congratulation! you get five points."</span>)</span><br><span class="line"><span class="keyword">if</span> alien_color != <span class="string">"green"</span>:</span><br><span class="line">	print()</span><br></pre></td></tr></table></figure>
&emsp;&emsp;<strong>5-4.外星人的颜色#2：</strong><br>&emsp;&emsp;<strong>5-5.外星人的颜色#3：</strong><br>&emsp;&emsp;<strong>5-6.人生的不同阶段：</strong><br>&emsp;&emsp;<strong>5-7.喜欢的水果：</strong></li>
</ul>
<h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>&emsp;&emsp;字典被包裹在花括号{ }中，由一系列键值对组成，键、值之间用冒号分隔，键值对之间用逗号分隔。用户可通过访问字典中的‘键’来间接获取对应的‘值’。  </p>
<ul>
<li>访问值：字典名[‘键名’]</li>
<li>添加键值对：字典名[‘新键名’] = 值</li>
<li>修改值：字典名[‘键名’] = 新值</li>
<li>删除键值对：del 字典名[‘键名’]  <div class="note warning">
            <p>删除的键值对永远消失了，不会被保存。  </p>
          </div>
</li>
</ul>
<h3 id="动手试一试："><a href="#动手试一试：" class="headerlink" title="动手试一试："></a>动手试一试：</h3><div class="tabs" id="chapter0601"><ul class="nav-tabs"><li class="tab"><a href="#chapter0601-1">6-1.人</a></li><li class="tab"><a href="#chapter0601-2">6-2.最喜欢的数字</a></li><li class="tab active"><a href="#chapter0601-3">6-3.词汇表</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0601-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">person = &#123;</span><br><span class="line">    <span class="string">'first_name'</span>:<span class="string">'Yubing'</span>,</span><br><span class="line">    <span class="string">'last_name'</span>:<span class="string">'Li'</span>,</span><br><span class="line">    <span class="string">'age'</span>: <span class="number">52</span>,</span><br><span class="line">    <span class="string">'city'</span>:<span class="string">'Hengyang'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">print(<span class="string">"My mom first_name is "</span> +</span><br><span class="line">    person[<span class="string">'first_name'</span>].title() +</span><br><span class="line">    <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"My mom last_name is "</span> +</span><br><span class="line">    person[<span class="string">'last_name'</span>].title() +</span><br><span class="line">    <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"My mom age is "</span> +</span><br><span class="line">    str(person[<span class="string">'age'</span>]) +</span><br><span class="line">    <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"My mom live in "</span> +</span><br><span class="line">    person[<span class="string">'city'</span>].title() +</span><br><span class="line">    <span class="string">"."</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0601-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">favorite_number = &#123;</span><br><span class="line">    <span class="string">'Wangyuancan'</span>:<span class="number">7</span>,</span><br><span class="line">    <span class="string">'Dengzihao'</span>:<span class="number">29</span>,</span><br><span class="line">    <span class="string">'Bailu'</span>:<span class="number">23</span>,</span><br><span class="line">    <span class="string">'Duanqingping'</span>:<span class="number">24</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Wangyuancan favorite number is "</span> +</span><br><span class="line">    str(favorite_number[<span class="string">'Wangyuancan'</span>]) +</span><br><span class="line">    <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"Dengzihao favorite number is "</span> +</span><br><span class="line">    str(favorite_number[<span class="string">'Dengzihao'</span>]) +</span><br><span class="line">    <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"Bailu favorite number is "</span> +</span><br><span class="line">    str(favorite_number[<span class="string">'Bailu'</span>]) +</span><br><span class="line">    <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"Duanqingping favorite number is "</span> +</span><br><span class="line">    str(favorite_number[<span class="string">'Duanqingping'</span>]) +</span><br><span class="line">    <span class="string">"."</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0601-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">alphabet = &#123;</span><br><span class="line">    <span class="string">'for'</span>:<span class="string">'循环语句'</span>,</span><br><span class="line">    <span class="string">'if'</span>:<span class="string">'条件判断语句'</span>,</span><br><span class="line">    <span class="string">'print'</span>:<span class="string">'打印消息'</span>,</span><br><span class="line">    <span class="string">'upper'</span>:<span class="string">'将字母以大写形式输出'</span>,</span><br><span class="line">    <span class="string">'sript'</span>:<span class="string">'消除字符两端的空白字符'</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">print(<span class="string">"for :"</span> + alphabet[<span class="string">'for'</span>] + <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"\nif :"</span> + alphabet[<span class="string">'if'</span>] + <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"\nprint :"</span> + alphabet[<span class="string">'print'</span>] + <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"\nupper :"</span> + alphabet[<span class="string">'upper'</span>] + <span class="string">"."</span>)</span><br><span class="line">print(<span class="string">"\nsript :"</span> + alphabet[<span class="string">'sript'</span>] + <span class="string">"."</span>)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="遍历字典"><a href="#遍历字典" class="headerlink" title="遍历字典"></a>遍历字典</h3><p><strong>for:</strong> </p>
<ul>
<li>用for语句遍历一个字典内的所有内容，用法如下： <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> name01,name02 <span class="keyword">in</span> dictionary_name.items():</span><br><span class="line">	dosomething;</span><br></pre></td></tr></table></figure>
<div class="note success">
            <p>name01表示键，name02表示值，可根据字典实际内容来给出恰当的名字，dictionary_name是你要遍历的字典名。这里还调用了items()方法来输出字典中的键值对。  </p>
          </div>  </li>
<li>用for语句遍历字典中的键，用法如下:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> dictionary_name.keys():</span><br><span class="line">	dosomething;</span><br></pre></td></tr></table></figure></li>
<li>按顺序遍历字典，用法如下：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> sorted(dictionary_name.keys()):</span><br><span class="line">	dosomething;</span><br></pre></td></tr></table></figure></li>
<li>遍历字典中的值，用法如下:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> dictionary_name.values():</span><br><span class="line">	dosomething;</span><br><span class="line"><span class="comment">#用set()函数剔除列表中的重复项</span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> set(dictionary_name.values()):</span><br><span class="line">	dosomething;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h3><p>&emsp;&emsp;在python中字典通常与列表进行相互嵌套来满足不同的存储需求。<br><div class="tabs" id="chapter0602"><ul class="nav-tabs"><li class="tab"><a href="#chapter0602-1">将字典存在列表中</a></li><li class="tab"><a href="#chapter0602-2">在字典中存列表</a></li><li class="tab active"><a href="#chapter0602-3">在字典中存储字典</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0602-1"><p>字典1 = {…}<br>字典2 = {…}<br>字典3 = {…}<br>列表1 = [字典1,字典2,字典3]</p></div><div class="tab-pane" id="chapter0602-2"><p>字典1 = {键名1：值1,键名2：列表1,}</p></div><div class="tab-pane active" id="chapter0602-3"><p>字典1 = {字典a,字典b,字典c,}</p></div></div></div></p>
<h2 id="用户输入和while循环"><a href="#用户输入和while循环" class="headerlink" title="用户输入和while循环"></a>用户输入和while循环</h2><h3 id="input"><a href="#input" class="headerlink" title="input()"></a>input()</h3><p>&emsp;&emsp;python中的input()函数类似与C语言中scanf()，可以用来接收用户的输入信息，input()内接收一个参数用于向用户显示的提示和说明，这将告诉用户该怎么做，接收的这些信息将被视为字符类型。因此，可以用<span class="label success">int()</span>来将字符转化为数值类型。<br><div class="note warning">
            <p>在python2中用raw_input()来获取用户输入，这和python3中的input()函数作用一样。</p>
          </div></p>
<h3 id="动手试一试-9"><a href="#动手试一试-9" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0701"><ul class="nav-tabs"><li class="tab"><a href="#chapter0701-1">7-1.汽车租赁</a></li><li class="tab"><a href="#chapter0701-2">7-2.餐馆订位</a></li><li class="tab active"><a href="#chapter0701-3">7-3.10的整数倍</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0701-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">car = input(<span class="string">"What kind of car do you want to rent? "</span>)</span><br><span class="line">print(<span class="string">"Let me see if I can find you a "</span> + car + <span class="string">"."</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0701-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number_of_customer = input(<span class="string">"How many peoople eat? "</span>)</span><br><span class="line">number_of_customer = int(number_of_customer)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> number_of_customer &gt; <span class="number">8</span>:</span><br><span class="line">    print(<span class="string">"There is no empty table."</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"There are free tables here."</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0701-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = input(<span class="string">"Please input a number: "</span>)</span><br><span class="line">number = int(number)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> number % <span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">    print(str(number) + <span class="string">" is multiple of 10."</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">     print(str(number) + <span class="string">" is not multiple of 10."</span>)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="while循环简介"><a href="#while循环简介" class="headerlink" title="while循环简介"></a>while循环简介</h3><p>&emsp;&emsp;while循环有一个进入循环的条件，满足后可以进入循环体内，因此可让用户选择什么时候退出循环，有以下几种方式：</p>
<ul>
<li>设置退出字符，如：‘quit’</li>
<li>设置标志，初始化为True，运行过程中变为False时将退出循环</li>
<li>使用break语句，若break语句被执行，则直接跳出循环体</li>
<li>使用continue，则该语句后的代码都将跳过，进入下一次循环</li>
</ul>
<h3 id="动手试一试-10"><a href="#动手试一试-10" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0702"><ul class="nav-tabs"><li class="tab"><a href="#chapter0702-1">7-4.比萨配料</a></li><li class="tab"><a href="#chapter0702-2">7-5.电影票</a></li><li class="tab"><a href="#chapter0702-3">7-6.三个出口</a></li><li class="tab active"><a href="#chapter0702-4">7-7.无限循环</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0702-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">prompt = <span class="string">"\nPlease enter the pizza toppings you want: "</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment">#prompt将作为提示信息提示用户该做什么，用户输入的比萨配料将保存在变量toppings中</span></span><br><span class="line">    toppings = input(prompt)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> toppings == <span class="string">'quit'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"We would add "</span> + toppings.title() + <span class="string">" in your pizza."</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0702-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">prompt = <span class="string">"\nPlease tell me your age: "</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    age = input(prompt)</span><br><span class="line">    age = int(age)</span><br><span class="line">    <span class="keyword">if</span> age &lt; <span class="number">3</span>:</span><br><span class="line">        print(<span class="string">"Welcom! you're free of charge."</span>)</span><br><span class="line">    <span class="keyword">elif</span> age &gt;= <span class="number">3</span> <span class="keyword">and</span> age &lt;= <span class="number">12</span>:</span><br><span class="line">        print(<span class="string">"Welcom! you need paid 10$."</span>)</span><br><span class="line">    <span class="keyword">elif</span> age &gt; <span class="number">12</span>:</span><br><span class="line">        print(<span class="string">"Welcom! you need paid 15$."</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0702-3"><p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#pizza_toppings.py</span></span><br><span class="line">prompt = <span class="string">"\nPlease enter the pizza toppings you want: "</span></span><br><span class="line">prompt += <span class="string">"\n(Enter 'quit' when you are finished.)"</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">#break出口</span></span><br><span class="line"><span class="string">while True:</span></span><br><span class="line"><span class="string">    #prompt将作为提示信息提示用户该做什么，用户输入的比萨配料将保存在变量toppings中</span></span><br><span class="line"><span class="string">    toppings = input(prompt)</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    if toppings == 'quit':</span></span><br><span class="line"><span class="string">        break</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        print("We would add " + toppings.title() + " in your pizza.")</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">#标志active出口</span></span><br><span class="line"><span class="string">active = True</span></span><br><span class="line"><span class="string">while active:</span></span><br><span class="line"><span class="string">    toppings = input(prompt)</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    if toppings == 'quit':</span></span><br><span class="line"><span class="string">        active = False</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        print("We would add " + toppings.title() + " in your pizza.")</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">#优化后的条件测试出口</span></span><br><span class="line"><span class="string">message = ""</span></span><br><span class="line"><span class="string">while message != 'quit':</span></span><br><span class="line"><span class="string">    message = input(prompt)</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    if message != 'quit':</span></span><br><span class="line"><span class="string">        print("We would add " + message.title() + " in your pizza.")</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></p>
<div class="note warning">
            <p>如何对7-5做上述修改？</p>
          </div></div><div class="tab-pane active" id="chapter0702-4"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(number)</span><br><span class="line">    number += <span class="number">1</span></span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="使用while循环来处理列表和字典"><a href="#使用while循环来处理列表和字典" class="headerlink" title="使用while循环来处理列表和字典"></a>使用while循环来处理列表和字典</h3><p>&emsp;&emsp;while循环在处理列表和字典上的作用包括但不限于如下几个典型方面：  </p>
<ul>
<li>在列表之间移动元素</li>
<li>删除包含特定值的所有列表元素</li>
<li>使用用户输入来填充字典</li>
</ul>
<h3 id="动手试一试-11"><a href="#动手试一试-11" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0703"><ul class="nav-tabs"><li class="tab"><a href="#chapter0703-1">7-8.熟食店</a></li><li class="tab"><a href="#chapter0703-2">7-9.五香烟熏牛肉(pastrami)卖完了</a></li><li class="tab active"><a href="#chapter0703-3">7-10.梦想的度假胜地</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0703-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sandwich_orders = [<span class="string">'tuna'</span>,<span class="string">'egg'</span>,<span class="string">'beef'</span>]</span><br><span class="line">finished_sandwiches = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> sandwich_orders:</span><br><span class="line">    current_sandwich = sandwich_orders.pop()</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"I made your "</span> + current_sandwich.title() + <span class="string">" sandwich."</span>)</span><br><span class="line">    finished_sandwiches.append(current_sandwich)</span><br><span class="line">    </span><br><span class="line">print(<span class="string">"\nThe following sandwiches have been finished:"</span>)</span><br><span class="line"><span class="keyword">for</span> finished_sandwiches <span class="keyword">in</span> finished_sandwiches:</span><br><span class="line">    print(finished_sandwiches.title() + <span class="string">" sandwiches."</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0703-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sandwich_orders = [</span><br><span class="line">    <span class="string">'tuna'</span>,</span><br><span class="line">    <span class="string">'egg'</span>,</span><br><span class="line">    <span class="string">'beef'</span>,</span><br><span class="line">    <span class="string">'pastrami'</span>,</span><br><span class="line">    <span class="string">'bacon'</span>,</span><br><span class="line">    <span class="string">'pastrami'</span>,</span><br><span class="line">    <span class="string">'onion'</span>,</span><br><span class="line">    <span class="string">'pastrami'</span>,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">print(<span class="string">"The deli's pastrami is sold out."</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="string">'pastrami'</span> <span class="keyword">in</span> sandwich_orders:</span><br><span class="line">    sandwich_orders.remove(<span class="string">'pastrami'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nThe rest sandwich includs:\n"</span> + str(sandwich_orders))</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0703-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">responses = &#123;&#125;</span><br><span class="line"></span><br><span class="line">polling_active = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> polling_active:</span><br><span class="line">    name = input(<span class="string">"\nWhat is your name? "</span>)</span><br><span class="line">    response = input(<span class="string">"If you could visit one place in the world, where would you go? "</span>)</span><br><span class="line">    </span><br><span class="line">    responses[name] = response</span><br><span class="line">    </span><br><span class="line">    repeat = input(<span class="string">"Would you like to let another person respond? (yes/no) "</span>)</span><br><span class="line">    <span class="keyword">if</span> repeat == <span class="string">'no'</span>:</span><br><span class="line">        polling_active = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n---Survey Result ---"</span>)</span><br><span class="line"><span class="keyword">for</span> name,response <span class="keyword">in</span> responses.items():</span><br><span class="line">    print(name + <span class="string">" would like to visit "</span> + response + <span class="string">"."</span>)</span><br></pre></td></tr></table></figure></div></div></div>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>&emsp;&emsp;函数是可以自定义的名字的代码块，用于完成某一具体任务或实现某一特定功能。</p>
<h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p>&emsp;&emsp;定义函数的示例如下：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义函数时的参数为形式参数(Formal parameter)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function_name</span><span class="params">(param01,param02,...)</span>:</span></span><br><span class="line">	dosometing</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过函数名来调用函数，调用时传入的参数是实际参数(Actual parameter)</span></span><br><span class="line">function_name(param01,param02,...)</span><br></pre></td></tr></table></figure></p>
<h3 id="动手试一试-12"><a href="#动手试一试-12" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0801"><ul class="nav-tabs"><li class="tab"><a href="#chapter0801-1">8-1.消息</a></li><li class="tab active"><a href="#chapter0801-2">8-2.喜欢的图书</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0801-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">display_message</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"In this chapter you'll learn function."</span>)</span><br><span class="line"></span><br><span class="line">display_message()</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0801-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">favorite_book</span><span class="params">(title)</span>:</span></span><br><span class="line">    print(<span class="string">"One of my favorite books is "</span> + title + <span class="string">"."</span>)</span><br><span class="line"></span><br><span class="line">favorite_book(<span class="string">'Alice in Wonderland'</span>)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="传递实参的方式"><a href="#传递实参的方式" class="headerlink" title="传递实参的方式"></a>传递实参的方式</h3><p>&emsp;&emsp;python中提供多种传递实参的方式，如下所示：</p>
<ul>
<li>位置实参：根据形式参数的位置顺序传递实参；</li>
<li>关键字实参：根据形式参数的名字来传递与之对应的实参；</li>
<li>默认值：可以为函数设置默认参数值，默认参数值一般不放在形参列表的开头；<div class="note danger">
            <p>调用带有参数的函数须提供参数，且应保持形参和实参相互匹配，避免逻辑错误。</p>
          </div>
</li>
</ul>
<h3 id="动手试一试-13"><a href="#动手试一试-13" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0802"><ul class="nav-tabs"><li class="tab"><a href="#chapter0802-1">8-3.T恤</a></li><li class="tab"><a href="#chapter0802-2">8-4.大号T恤</a></li><li class="tab active"><a href="#chapter0802-3">8-4.城市</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0802-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_skirt</span><span class="params">(size, font)</span>:</span></span><br><span class="line">    print(<span class="string">"Your T-skirt size is "</span> + size +</span><br><span class="line">     <span class="string">", and "</span> + font + <span class="string">"will print on it."</span>)</span><br><span class="line">make_skirt(<span class="string">'XL'</span>,<span class="string">"'Python' "</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0802-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">"""make_skirt()函数的默认参数为XXL,I love Python."""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_skirt</span><span class="params">(size = <span class="string">'XXL'</span>, font = <span class="string">"'I love Python'"</span>)</span>:</span></span><br><span class="line">    print(<span class="string">"Your T-skirt size is "</span> + size +</span><br><span class="line">     <span class="string">", and "</span> + font + <span class="string">"will print on it."</span>)</span><br><span class="line"></span><br><span class="line">make_skirt()</span><br><span class="line">make_skirt(size = <span class="string">'XL'</span>)</span><br><span class="line">make_skirt(size = <span class="string">'S'</span>, font = <span class="string">"'Hello'"</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0802-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">describe_city</span><span class="params">(city = <span class="string">'Beijing'</span>, country = <span class="string">'China'</span>)</span>:</span></span><br><span class="line">    print(city + <span class="string">" is in "</span> + country)</span><br><span class="line"></span><br><span class="line">describe_city()</span><br><span class="line">describe_city(city = <span class="string">"Shanghai"</span>)</span><br><span class="line">describe_city(city = <span class="string">"New York"</span>, country = <span class="string">"America"</span>)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><p>&emsp;&emsp;函数被调用后可返回一个值给用户使用，通过返回值可以进一步简化代码。</p>
<h4 id="返回简单值"><a href="#返回简单值" class="headerlink" title="返回简单值"></a>返回简单值</h4><p>&emsp;&emsp;返回简单的字符串、整数等结果。</p>
<h4 id="让实参可选"><a href="#让实参可选" class="headerlink" title="让实参可选"></a>让实参可选</h4><p>&emsp;&emsp;给某些实参设置空字符串的默认值，让该参数编程可选参数，用户可以选择填写，也可以选择不填写。</p>
<h4 id="返回字典"><a href="#返回字典" class="headerlink" title="返回字典"></a>返回字典</h4><p>&emsp;&emsp;将接收的参数处理后返回给用户一个字典。</p>
<blockquote>
<p>ps:函数内可以使用while语句、if语句、for循环等来实现各种复杂的功能。</p>
</blockquote>
<h3 id="动手试一试-14"><a href="#动手试一试-14" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0803"><ul class="nav-tabs"><li class="tab"><a href="#chapter0803-1">8-6.城市名</a></li><li class="tab"><a href="#chapter0803-2">8-7.专辑</a></li><li class="tab active"><a href="#chapter0803-3">8-8.用户的专辑</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0803-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">city_country</span><span class="params">(city, country)</span>:</span></span><br><span class="line">    print(<span class="string">'"'</span> + city + <span class="string">','</span> + country + <span class="string">'"'</span>)</span><br><span class="line">    </span><br><span class="line">city_country(<span class="string">'Santiago'</span>,<span class="string">'Chile'</span>)</span><br><span class="line">city_country(<span class="string">'Beijing'</span>,<span class="string">'China'</span>)</span><br><span class="line">city_country(<span class="string">'Chicago'</span>,<span class="string">'America'</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0803-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_album</span><span class="params">(singer_name, album_name, song_number = <span class="string">''</span>)</span>:</span></span><br><span class="line">    album = &#123;<span class="string">'singer_name'</span>: singer_name, <span class="string">'album_name'</span>: album_name&#125;</span><br><span class="line">    <span class="keyword">if</span> song_number:</span><br><span class="line">        album[<span class="string">'song_number'</span>] = song_number</span><br><span class="line">    <span class="keyword">return</span> album</span><br><span class="line"></span><br><span class="line">finished_album = make_album(<span class="string">'JJ'</span>,<span class="string">'Under the dark'</span>, song_number = <span class="number">7</span>)</span><br><span class="line">print(finished_album)</span><br><span class="line"></span><br><span class="line">finished_album = make_album(<span class="string">'Jackchou'</span>,<span class="string">'No cry'</span>)</span><br><span class="line">print(finished_album)</span><br><span class="line"></span><br><span class="line">finished_album = make_album(<span class="string">'Xuezhiqian'</span>,<span class="string">'Du'</span>, song_number = <span class="number">10</span>)</span><br><span class="line">print(finished_album)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0803-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_album</span><span class="params">(singer_name, album_name, song_number = <span class="string">''</span>)</span>:</span></span><br><span class="line">    album = &#123;<span class="string">'singer_name'</span>: singer_name, <span class="string">'album_name'</span>: album_name&#125;</span><br><span class="line">    <span class="keyword">if</span> song_number:</span><br><span class="line">        album[<span class="string">'song_number'</span>] = song_number</span><br><span class="line">    <span class="keyword">return</span> album</span><br><span class="line">    </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">"\nPlease enter your favorite singer and his/her album name: "</span>)</span><br><span class="line">    print(<span class="string">"(enter 'q' at any time to quit)"</span>)</span><br><span class="line">    </span><br><span class="line">    singer_name = input(<span class="string">"Enter singer's name: "</span>)</span><br><span class="line">    <span class="keyword">if</span> singer_name == <span class="string">'q'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    album_name = input(<span class="string">"Enter album name: "</span>)</span><br><span class="line">    <span class="keyword">if</span> album_name == <span class="string">'q'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    custom_album = make_album(singer_name,album_name)</span><br><span class="line">    print(custom_album)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="传递列表"><a href="#传递列表" class="headerlink" title="传递列表"></a>传递列表</h3><p>&emsp;&emsp;在这一部分主要是了解如何用列表的形式来传递参数，以及在函数中修改/禁止修改列表的方式。修改列表的通过两个列表来实现，将旧列表中的元素用pop()方法依次弹出，弹出的元素通过append()方法添加到新列表中去。使用列表的切片表示法来创建一个列表的副本，这样可以保持列表不被修改。</p>
<div class="note warning">
            <p>一般将原始列表传递给函数，因为让函数使用现成列表可避免花时间和内存创建副本，从而提高效率，在处理大型列表时尤其如此。 </p>
          </div>
<h3 id="动手试一试-15"><a href="#动手试一试-15" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0804"><ul class="nav-tabs"><li class="tab"><a href="#chapter0804-1">8-9.魔术师</a></li><li class="tab"><a href="#chapter0804-2">8-10.了不起的魔术师</a></li><li class="tab active"><a href="#chapter0804-3">8-11.不变的魔术师</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0804-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_magicians</span><span class="params">(names)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">        print(name.title())</span><br><span class="line"></span><br><span class="line">magician_list = [<span class="string">'david'</span>,<span class="string">'jackson'</span>,<span class="string">'lice'</span>]</span><br><span class="line">show_magicians(magician_list)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0804-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">magician_list = [<span class="string">'david'</span>,<span class="string">'jackson'</span>,<span class="string">'alice'</span>]</span><br><span class="line">changed_magician_list = []</span><br><span class="line"></span><br><span class="line"><span class="string">"""函数make_great用于在原来的魔术师列表添加字符串'The Great'"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_great</span><span class="params">(magician_list,changed_magician_list)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> magician_list:</span><br><span class="line">        magician = magician_list.pop()</span><br><span class="line">        changed_magician = <span class="string">'The Great '</span> + magician.title()</span><br><span class="line">        changed_magician_list.append(changed_magician)</span><br><span class="line">        </span><br><span class="line"><span class="string">"""函数show_magicians用于打印修改后的魔术师列表"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_magicians</span><span class="params">(changed_magician_list)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> changed_magician_list:</span><br><span class="line">        print(name)</span><br><span class="line">                </span><br><span class="line">make_great(magician_list,changed_magician_list)</span><br><span class="line">show_magicians(changed_magician_list)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nOriginal magician list:"</span>)</span><br><span class="line">print(magician_list)</span><br><span class="line">print(<span class="string">"\nChanged magician list:"</span>)</span><br><span class="line">print(changed_magician_list)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0804-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">magician_list = [<span class="string">'david'</span>,<span class="string">'jackson'</span>,<span class="string">'alice'</span>]</span><br><span class="line">changed_magician_list = []</span><br><span class="line"></span><br><span class="line"><span class="string">"""函数make_great用于在原来的魔术师列表添加字符串'The Great'"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_great</span><span class="params">(magician_list,changed_magician_list)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> magician_list:</span><br><span class="line">        magician = magician_list.pop()</span><br><span class="line">        changed_magician = <span class="string">'The Great '</span> + magician.title()</span><br><span class="line">        changed_magician_list.append(changed_magician)</span><br><span class="line">        </span><br><span class="line"><span class="string">"""函数show_magicians用于打印修改后的魔术师列表"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_magicians</span><span class="params">(changed_magician_list)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> changed_magician_list:</span><br><span class="line">        print(name)</span><br><span class="line"></span><br><span class="line"><span class="comment">#这里只传入原来魔术师列表的副本，从而使得原始列表不被修改            </span></span><br><span class="line">make_great(magician_list[:],changed_magician_list)</span><br><span class="line">show_magicians(changed_magician_list)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nOriginal magician list:"</span>)</span><br><span class="line">print(magician_list)</span><br><span class="line">print(<span class="string">"\nChanged magician list:"</span>)</span><br><span class="line">print(changed_magician_list)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="传递任意数量的实参"><a href="#传递任意数量的实参" class="headerlink" title="传递任意数量的实参"></a>传递任意数量的实参</h3><p>&emsp;&emsp;在python中传递任意数量的实参有以下几种方式：</p>
<ul>
<li>在形参前面加‘*’：添加一个星号后的形参实际上将创建一个空元组，将收到的值都封装在这个元组中。</li>
<li>在形参前面加‘**’：添加两个星号后的形参实际上将创建一个空字典，将收到的值都封装在这个字典中。</li>
</ul>
<h3 id="动手试一试-16"><a href="#动手试一试-16" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0805"><ul class="nav-tabs"><li class="tab"><a href="#chapter0805-1">8-12.三明治</a></li><li class="tab"><a href="#chapter0805-2">8-13.用户简介</a></li><li class="tab active"><a href="#chapter0805-3">8-14.汽车</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0805-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_sandwich</span><span class="params">(*foods)</span>:</span></span><br><span class="line">    <span class="string">"""概述要制作的三明治需要的食材"""</span></span><br><span class="line">    print(<span class="string">"\nMaking a sandwich use the following foods:"</span>)</span><br><span class="line">    <span class="keyword">for</span> food <span class="keyword">in</span> foods:</span><br><span class="line">        print(<span class="string">"- "</span> + food)</span><br><span class="line">    </span><br><span class="line">make_sandwich(<span class="string">'redpepper'</span>,<span class="string">'tuna'</span>)</span><br><span class="line">make_sandwich(<span class="string">'mushroom'</span>,<span class="string">'green peppers'</span>,<span class="string">'extra cheese'</span>) </span><br><span class="line">make_sandwich(<span class="string">'bacon'</span>,<span class="string">'onion'</span>,<span class="string">'fish'</span>,<span class="string">'beef'</span>,<span class="string">'apple'</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0805-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_profile</span><span class="params">(first,last,**user_info)</span>:</span></span><br><span class="line">    <span class="string">"""创建一个字典，其中包含我们知道的用户的一切"""</span></span><br><span class="line">    profile = &#123;&#125;</span><br><span class="line">    profile[<span class="string">'first_name'</span>] = first</span><br><span class="line">    profile[<span class="string">'last_name'</span>] = last</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> key,value <span class="keyword">in</span> user_info.items():</span><br><span class="line">        profile[key] = value</span><br><span class="line">    <span class="keyword">return</span> profile</span><br><span class="line"></span><br><span class="line">user_profile = build_profile(<span class="string">'Yuancan'</span>,<span class="string">'Wang'</span>,</span><br><span class="line">                             location = <span class="string">'Hunan'</span>,</span><br><span class="line">                             field = <span class="string">'computer science'</span>,</span><br><span class="line">                             hobby = <span class="string">'basketball'</span>)                        </span><br><span class="line">print(user_profile)</span><br></pre></td></tr></table></figure></div><div class="tab-pane active" id="chapter0805-3"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">produce_cars</span><span class="params">(manufacturer,model,**car_info)</span>:</span></span><br><span class="line">    <span class="string">"""创建一个字典，其中包含我们知道的汽车信息的一切"""</span></span><br><span class="line">    profile = &#123;&#125;</span><br><span class="line">    profile[<span class="string">'manufacturer_name'</span>] = manufacturer</span><br><span class="line">    profile[<span class="string">'model_name'</span>] = model</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> key,value <span class="keyword">in</span> car_info.items():</span><br><span class="line">        profile[key] = value</span><br><span class="line">    <span class="keyword">return</span> profile</span><br><span class="line"></span><br><span class="line">car_info = produce_cars(<span class="string">'bwm'</span>,<span class="string">'s1'</span>,</span><br><span class="line">                             color = <span class="string">'black'</span>,</span><br><span class="line">                             horsepower = <span class="string">'16'</span>,</span><br><span class="line">                             displacement = <span class="string">'10L'</span>)</span><br><span class="line">                            </span><br><span class="line">print(car_info)</span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="函数模块化"><a href="#函数模块化" class="headerlink" title="函数模块化"></a>函数模块化</h3><p>&emsp;&emsp;函数模块化的思想是将一些函数封装到一个python文件中去，形成一个功能模块。当用户需要使用模块中的某些方法时就可以通过导入该模块来调用相应的方法。模块化的思想隐藏了函数的实现细节，使得主程序更加简洁易懂。<br>&emsp;&emsp;使用模块的主要形式如下：</p>
<ul>
<li>导入整个模块：import module_name </li>
<li>导入模块中的特定函数：from module_name import function_name</li>
<li>用as给函数指定别名：from module_name import function_name as fn</li>
<li>用as给模块指定别名：import module_name as mn</li>
<li>导入模块中所有函数：from module_name import * </li>
</ul>
<h3 id="函数编写指南"><a href="#函数编写指南" class="headerlink" title="函数编写指南"></a>函数编写指南</h3><p>&emsp;&emsp;养成良好的函数编写习惯十分重要，好的习惯让我们在学习的道路上更加轻松。<br><div class="note success">
            <ul><li>给函数指定描述性名称</li><li>每个函数都应包含简要地阐述其功能的注释，该注释应紧跟在函数定义后面，并采用文档字符串格式。</li><li>给形参指定默认值和函数调用中的关键字实参的等号两边不要有空格</li><li>可使用两个空行将相邻的函数分开</li><li>所有的import语句都应放在文件开头，唯一例外的情形是，在文件开头使用了注释来描述整个程序。</li></ul>
          </div></p>
<h3 id="动手试一试-17"><a href="#动手试一试-17" class="headerlink" title="动手试一试"></a>动手试一试</h3><div class="tabs" id="chapter0806"><ul class="nav-tabs"><li class="tab"><a href="#chapter0806-1">8-1.打印模型</a></li><li class="tab"><a href="#chapter0806-2">8-16.导入</a></li><li class="tab active"><a href="#chapter0806-3">8-17.函数编写指南</a></li></ul><div class="tab-content"><div class="tab-pane" id="chapter0806-1"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> printing_functions <span class="keyword">as</span> pf</span><br><span class="line"></span><br><span class="line">unprinted_designs = [<span class="string">'iphone case'</span>, <span class="string">'robot pendant'</span>, <span class="string">'dodecahedron'</span>]</span><br><span class="line">completed_models = []</span><br><span class="line"></span><br><span class="line"><span class="comment">#print_models(unprinted_designs, completed_models)</span></span><br><span class="line">pf.print_models(unprinted_designs[:], completed_models)</span><br><span class="line">pf.show_completed_models(completed_models)</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="chapter0806-2"><p>略。</p></div><div class="tab-pane active" id="chapter0806-3"><p>略。</p></div></div></div>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC基础</title>
    <url>/2020/02/14/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/Java/JDBC%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>从这里开始了解JDBC…</p>
<a id="more"></a>
<div class="note primary">
            <p>笔记的相关内容来自于B站的<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2NTkyNjM4NjAvP3NwbV9pZF9mcm9tPTMzMy43ODguYl82MzZmNmQ2ZDY1NmU3NC4zNA==" title="https://www.bilibili.com/video/av59263860/?spm_id_from=333.788.b_636f6d6d656e74.34">JDBC教程<i class="fa fa-external-link"></i></span></p>
          </div>
<h1 id="1-JDBC是什么？"><a href="#1-JDBC是什么？" class="headerlink" title="1. JDBC是什么？"></a>1. JDBC是什么？</h1><p>&emsp;&emsp;JDBC全称Java DataBase Connectivity(即Java语言连接数据库)。JDBC的本质是SUN公司制定的一套接口(interface)，JDBC属于<mark>java.sql.*;</mark>这个软件包下还有很多其他接口。每一个接口都有<mark>调用者和实现者</mark>。面向接口调用，面向接口写实现类，这些都属于面向接口编程。<br><div class="note info">
            <p>为什么要面向接口编程？</p>
          </div></p>
<blockquote>
<p><strong>解耦合</strong>：降低程序的耦合度，提高程序的扩展力；</p>
</blockquote>
<div class="note info">
            <p>多态机制</p>
          </div>  
<p>&emsp;&emsp;多态机制就是非常典型的面向抽象编程，举例如下，其中Animal是抽象类，而Dog和Cat是具体的对象，由Animal这个抽象的父类可以衍生出各种不同形态的子类(对象)，于是，“多态”的概念可以窥见一斑；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//建议：  </span></span><br><span class="line"> Animal a = <span class="keyword">new</span> Cat();  </span><br><span class="line"> Animal d = <span class="keyword">new</span> Dog();</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">feed</span><span class="params">(Animal a)</span><span class="comment">//(面向父类型编程)  </span></span></span><br><span class="line"><span class="function">     </span></span><br><span class="line"><span class="function"><span class="comment">//不建议：  </span></span></span><br><span class="line"><span class="function"> Dog d </span>= <span class="keyword">new</span> Dog();  </span><br><span class="line"> Cat t = <span class="keyword">new</span> Cat();</span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>为什么SUN公司要指定一套JDBC接口？</p>
          </div>
<p>&emsp;&emsp;因为每一个数据库的底层实现原理都不同，如Orcal,MySQL,MS Sqlsever等数据库都有自己的实现原理，我们可以通过接口调用任何一个数据库，而不用关心接口底下的实现方式。因此，SUN公司定义好这样一个连接数据的接口后，大大减小了程序员的工作量。</p>
<h1 id="2-模拟JDBC本质"><a href="#2-模拟JDBC本质" class="headerlink" title="2. 模拟JDBC本质"></a>2. 模拟JDBC本质</h1><p>&emsp;&emsp;下面来模拟一下JDBC的本质，下面是一张描绘JDBC接口与它的实现者，调用者之间关系的图片:<img src="http://m.qpic.cn/psc?/V12EJyj53W0gCd/lpoTnOcKgshCRzVbSpUVWSiiJvxqm9kxubDGKe4cz5v.xYV*l5HU5oFmwy6zWLR*seL33VClngKsqUygDIiG825HNsJpdTwmZ8.uWyntiHg!/b&amp;bo=.wUIAwAAAAADB9c!&amp;rf=viewer_4" alt="Fig.JDBC"><br>&emsp;&emsp;模拟的过程如下：SUN公司定义了一个<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvSmF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/Java">JDBC<i class="fa fa-external-link"></i></span>的接口,于是各大数据库厂家纷纷开始对这个接口进行实现(<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvTXlTUUwuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/MySQL.java">MySQL<i class="fa fa-external-link"></i></span>,<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvT3JhY2xlLmphdmE=" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/Oracle.java">Oracle<i class="fa fa-external-link"></i></span>,<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvU3Fsc2VydmVyLmphdmE=" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/Sqlserver.java">Sqlserver<i class="fa fa-external-link"></i></span>)，因此，不同的数据库底层的实现原理不尽相同。作为<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvSmF2YVByb2dyYW1tZXIuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/JavaProgrammer.java">Java程序员<i class="fa fa-external-link"></i></span>来说，却不需要关心这些实现细节，只需要调用数据库厂家已经实现好的接口即可，这大大缩短了开发周期。</p>
<blockquote>
<p>代码的进一步优化是利用反射机制创建对象，通过<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyLyVFNiVBOCVBMSVFNiU4QiU5RkpEQkMlRTYlOUMlQUMlRTglQjQlQTgvamRiYy5wcm9wZXJ0aWVz" title="https://github.com/ManKeepUP/Code/blob/master/%E6%A8%A1%E6%8B%9FJDBC%E6%9C%AC%E8%B4%A8/jdbc.properties">配置文件<i class="fa fa-external-link"></i></span>来实现对不同种类的数据库调用，而Java代码不用再作任何修改。</p>
</blockquote>
<h1 id="3-开发前的准备"><a href="#3-开发前的准备" class="headerlink" title="3. 开发前的准备"></a>3. 开发前的准备</h1><p>&emsp;&emsp;JDBC开发前的准备工作：需要先从官网上下载对应的jar包，然后将其配置到环境变量classpath当中。classpath是环境变量，若没有可以新建一个，具体方式如下：<br><div class="note warning">
            <p>请注意路径前面的.;不能漏，.表示是当前路径</p>
          </div><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">classpath=.;D:\Java\JDBC\resources\mysql-connector-java-5.1.48\mysql-connector-java-5.1.48-bin.jar</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>以上关于JDBC的配置是针对于文本编辑器的方式开发，使用IDEA工具的时候，不需要配置以上的环境变量，IDEA有自己的配置方式。</p>
</blockquote>
<h1 id="4-JDBC编程六步"><a href="#4-JDBC编程六步" class="headerlink" title="4. JDBC编程六步"></a>4. JDBC编程六步</h1><h2 id="4-1-编程六步详情"><a href="#4-1-编程六步详情" class="headerlink" title="4.1 编程六步详情"></a>4.1 编程六步详情</h2><ul>
<li>第一步：注册驱动（作用：告诉Java程序，即将要连接的是哪个品牌的数据库）</li>
<li>第二步：获取连接（作用：表示JVM的进程和数据库进程之间的通道打开了，这属于进程之间的通信，是重量级的，使用完之后一定要关闭通道）</li>
<li>第三步：获取数据库操作对象（作用：专门执行sql语句的对象）</li>
<li>第四步：执行SQL语句（作用：DQL,DML…）</li>
<li>第五步：处理查询结果集（作用：只有当第四步执行的是select语句时，才有这一步处理查询结果集）</li>
<li>第六步：释放资源（作用：使用完资源之后一定要关闭资源，java和数据库数据进程间的通信，开启之后一定要关闭）</li>
<li></li>
</ul>
<h2 id="4-2-JDBC编程实例"><a href="#4-2-JDBC编程实例" class="headerlink" title="4.2 JDBC编程实例"></a>4.2 JDBC编程实例</h2><h3 id="4-2-1-六步规范代码"><a href="#4-2-1-六步规范代码" class="headerlink" title="4.2.1 六步规范代码"></a>4.2.1 六步规范代码</h3><p>&emsp;&emsp;下面是一段实例代码，展示了上述六个步骤的代码实现过程，点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDEuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest01.java">JDBCTest01.java<i class="fa fa-external-link"></i></span>去看看吧~</p>
<h3 id="4-2-2-实现delete-update"><a href="#4-2-2-实现delete-update" class="headerlink" title="4.2.2 实现delete,update"></a>4.2.2 实现delete,update</h3><p>&emsp;&emsp;下面是实现删除(delete)和更新(update)数据库的代码，点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDIuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest02.java">JDBCTest02.java<i class="fa fa-external-link"></i></span>查看~</p>
<h3 id="4-2-3-注册驱动优化"><a href="#4-2-3-注册驱动优化" class="headerlink" title="4.2.3 注册驱动优化"></a>4.2.3 注册驱动优化</h3><p>&emsp;&emsp;我们对JDBC六步中的“注册驱动”这一步进行优化，优化后的代码是一种更为常用的写法，点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDMuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest03.java">JDBCTest03<i class="fa fa-external-link"></i></span>查看~</p>
<h3 id="4-2-4-将数据库信息写到配置文件"><a href="#4-2-4-将数据库信息写到配置文件" class="headerlink" title="4.2.4 将数据库信息写到配置文件"></a>4.2.4 将数据库信息写到配置文件</h3><p>&emsp;&emsp;将数据库信息写到配置文件中，能够优化我们的项目代码，点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDQuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest04.java">JDBCTest04<i class="fa fa-external-link"></i></span>可查看~</p>
<h3 id="4-2-5-处理查询结果集"><a href="#4-2-5-处理查询结果集" class="headerlink" title="4.2.5 处理查询结果集"></a>4.2.5 处理查询结果集</h3><p>&emsp;&emsp;当使用select语句时，我们要用查询结果集中的get方法来获取数据中的内容，用rs.next()方法来移动光标，见下图：<img src="http://m.qpic.cn/psc?/V12EJyj53W0gCd/lpoTnOcKgshCRzVbSpUVWYBaXKrJ5rgrkzw49OWXj.Kz52tgDTHBQ6iAbd0gvBcLpGoVoEU.kuCHWUlKPGiwExyrrMP7sQw4IanEWQjk4WU!/b&amp;bo=.wUIAwAAAAADB9c!&amp;rf=viewer_4" alt="Fig.遍历结果集">点击<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hbktlZXBVUC9Db2RlL2Jsb2IvbWFzdGVyL0pEQkNUZXN0MDUuamF2YQ==" title="https://github.com/ManKeepUP/Code/blob/master/JDBCTest05.java">JDBCTest05<i class="fa fa-external-link"></i></span>查看本实例的代码吧~</p>
]]></content>
      <categories>
        <category>Java基础</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
      </tags>
  </entry>
  <entry>
    <title>ManKeepUP-BLOG始末</title>
    <url>/2020/02/09/%E5%8D%9A%E5%AE%A2%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="841ed8acc777ae18a8f615caf043c6ab2f5b910c4d19746b84737a22e41f33fc">6525c67eef9dbf1b118ce711fb64452975dcbc708c8c69f5971928f43bc8a509d87bcb424efa676d9e7301c91c65b57587e96bb091ccaca53fcaa90e8e8e4c2a1265a1923c6d4a0ccd50ca8480d803d64b99856203a383f54d811df0e39416043864a8a4af80cb88d181a8df9ea5b99cf585bf35e58c2795fc4087c2c33a746c23b2eb6cee35debd1a15a5ae20f57ae6ed6636e0c1182dc607b0971947459f35adfdb99a609a472c0f7fb4539799a67fcbb567bae0ebbcaf3d4f2c5791cba124a04c09ed476f3c49665a7a2da79293dc5106727bab7a4fb0194973d85159fa6079f42c070bb26f273b66b03105f353df7c7e55af7effd6b68e44d2c8342211abad4c97e6fb9f9dc9a47973f03998aa26ec7ceb1e5b5d8f2836544828a3655aa4d88bad691328f82ae0ebbbe5d74ff1483a29ceed052911b48d0b3841c3e5868ed40488565b6c3a502281fdc435a5586e8093f9033ba7dd6ee766481ed313393bcfe3ae2781eec0524920b8ce92f2e05459266722a2ff263b36e33c281885773739d22bf8991fa5afc703f5cd769665f30f2df74226b37d5d1727e6feb4cd8eef23e90dc02fd83d678d8d7864d47a7482e212a04dcc4e5eb519812485484d9b90ab412e564edf2720f5bd16219a54249a097d1532e187d99ca0b4571583835abaea45148c8e76ff1d74adc51e10a7f280f6b01923a4275268754805bd40f3ce497af2b068de281859061cef221635fe18c1e151bd68ec5aaef60a71f49f40db58d4aec9d360cdb660ca293b5e44779d1ed0db1c82e8b852bfd21760fac055b454b9db27397ca11920eef6e6bf8d478474d4f6cd575754246879c40b1ff92145d2d5fb3bb0708471bd8c3d9f99ebecf34783f4d0b8eb135e94506a566bc3cdb78046ec71afb9d49344919a3c187003aada0da8a91a63ac9178c12c0c18dbf4a927c6599b52222c6673b78d04e2a52495d92899c5219d7f9573eeadff1a5dc139fb0ceab331036e77f3d1c296ffdc6cf889bef24edab04ab5033c78647a68593101fbe54becb2325ccbe779908a1f8acd0d45c444c1d6e198c60036a532cb4cfa9c4a282085b79244fa6efb732fad41673aee8cd68d188515e7fef6c918eb8df5965282067c8b2bd326d7ca41919bf1d73971778c250f8aa7a0364900f8c82d850327e955721744a8de6bb8252addd7e403336a99b210775cf49cd8992f7de09d5b2126bfc1803080d399b9830690801852f02554b6dca50c57d14fdd8756bf6b36f5424ec08ec5f24c57fe14e5102073a5a56358cf9792926457a1f9e8064ec38d0961f2618ca9b9f39a9d5e07d684c63f42e1cc0630646210e2558d8ee8f4d21529d97df73d0446c77d41f6782efe2b116faf646adc32445113a2632c36b745245d84761bb76ab721eee991c00840f9ee1f731100f7f81ed843b80181f3656d20f9a484c76a7871294e76899a369b5c1733a4200f4c149ee1d3749d5a3acd18c5e6144019b9321e2cddefaf5853fad987cc6858f25269e7591c8d8da9a7d44919754849ae46aa8b67ae942ed932251036d90e310cbd2950d54c831e93d20061d907b3048b59ff2fcbab41fa3fbfbad395fff7c320e2f9b3be73bdbb396b1117c70d7e314948ada29afa77ca437c58418bcf11f915da5be6417487397ce97d035a5451f258f843b4fddbecb20d6297cb140775a3e257be3d6a1b0c76e99dd5926d11d4f4f9c2ff9cc4f37447047120afa2b0e7bc9c334d023dd9388e2b8d3b327f9560cd1a99b2cf64c3fa5499c22f990ea7a9ba26a58b78376b44c0a56bc5cd41036add6e7d6cb08af661708dfc5c7342f8120ae768370b6d8d8d2ccb52ab7ceed71ecb5a21d3bb75c6fc03a9f758041ec75315374e184eb8eadb0314da4925aad62acbfb344983c4e4e982610a3f4c98b4313ddbddde7856159b81f0bfb310062d6d11da3b99ba762e9a1dd5187cdf63668f352464850b9f74d3cbffa0cc14f394a40558eeec2be23d5161c6bf39d85f77c9d2247bb27f0c517a10805c93eaf24c4995c35da4d36def95affe92bfef47ca220986f0dfbbe663f29bbc9f759d8bec4b3c53b227b3d04fa5212d8d7851cfc0eccddda91658c7e41c80078f2723d7cddca61e8f2a958438ec8d58f1a9d9ddedf0828a6b41ffb19b08ce278818d2ede6cb270402331849271c85da41962d46bf4253808bec8c4fb2bea39ba16a592c035ecf6badbefe4d5d7c9bca886f719feade706ff39a2cafae211f8573af7fa678a0873b16198dc52f1a48124ce1b17d010976f51a17795c8097bf03f10eb473718ff8bb02eb9900e68214e6df789f49a98f0f1535123e711d76bea87c76841f1843e13dcd543d8741f92a31de443d96628faaaa2a9c0923ec853b173f9bf54c9334c6f641e5f2b8fd763ba391448d0adda56a50e351b6d91fb1a208debf2b66ba6968e28cf4d74f95a0c8505c27881cac2eba9940100af5a147e8029dfddf117c1fb26067c8436426858da6bc0d4eae645059530ef2f6fa96cf981d12b71b108c2360a50a103fd57791d879bcdf109f1449f042d9c3b998f9cbf73fda488c207ea4a98c7e010753863c93a7e95b1ea4b035ad4197035bd46955fec37b9e5ac0</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown用法</title>
    <url>/2020/02/08/%E5%B7%A5%E5%85%B7%E8%AF%B4%E6%98%8E%E4%B9%A6/Markdown%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<p>从这里快速入手Markdown…</p>
<a id="more"></a>
<div class="note primary">
            <p>欢迎阅读！Markdown同Next主题一样——强大高效，简单干净。本文将梳理Markdown中常见的语法，让你迅速用Markdown进行创作。Let’s Go!</p>
          </div>
<h1 id="Markdown使用手册"><a href="#Markdown使用手册" class="headerlink" title="Markdown使用手册"></a>Markdown使用手册</h1><h2 id="Markdown样式"><a href="#Markdown样式" class="headerlink" title="Markdown样式"></a>Markdown样式</h2><h2 id="代码块设置"><a href="#代码块设置" class="headerlink" title="代码块设置"></a>代码块设置</h2><p>&emsp;&emsp;想在文件中嵌入代码，只需要用三个‘`’符号(位于tab键上方)一上一下将代码包含在内，你可以在‘```’符号后再做进一步的设置，如language,url,title等等。   </p>
<h2 id="图"><a href="#图" class="headerlink" title="图"></a>图</h2><h3 id="用Mermaid画图"><a href="#用Mermaid画图" class="headerlink" title="用Mermaid画图"></a>用Mermaid画图</h3><p>&emsp;&emsp;NexT允许用户通过代码来绘制多种图形(如甘特图、流图、类图、顺序图等)，在NexT主题中集成了Mermaid插件，使用它时需要我们在_config.yml文件设置为true。如果是刚开始接触，我们可以在github的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lcm1haWQtanMvbWVybWFpZA==" title="https://github.com/mermaid-js/mermaid">mermaid<i class="fa fa-external-link"></i></span>仓库上在线画图，学习它的用法。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Mermaid tag</span></span><br><span class="line">mermaid:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Available themes: default | dark | forest | neutral</span></span><br><span class="line">  theme: default</span><br></pre></td></tr></table></figure></p>
<h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>&emsp;&emsp;如果想要插入一张图片，那么可以这么做：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#如果是网上的图片</span></span><br><span class="line">![你给图片取的名字](图片地址链接)</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
